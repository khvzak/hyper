var searchIndex = {};
searchIndex["hyper_sync"] = {"doc":"Hyper","items":[[3,"Url","hyper_sync","A parsed URL record.",null,null],[3,"LanguageTag","","A language tag as described in BCP47.",null,null],[12,"language","","Language subtags are used to indicate the language, ignoring all other aspects such as script, region or spefic invariants.",0,null],[12,"extlangs","","Extended language subtags are used to identify certain specially selected languages that, for various historical and compatibility reasons, are closely identified with or tagged using an existing primary language subtag.",0,null],[12,"script","","Script subtags are used to indicate the script or writing system variations that distinguish the written forms of a language or its dialects.",0,null],[12,"region","","Region subtags are used to indicate linguistic variations associated with or appropriate to a specific country, territory, or region. Typically, a region subtag is used to indicate variations such as regional dialects or usage, or region-specific spelling conventions. It can also be used to indicate that content is expressed in a way that is appropriate for use throughout a region, for instance, Spanish content tailored to be useful throughout Latin America.",0,null],[12,"variants","","Variant subtags are used to indicate additional, well-recognized variations that define a language or its dialects that are not covered by other available subtags.",0,null],[12,"extensions","","Extensions provide a mechanism for extending language tags for use in various applications.  They are intended to identify information that is commonly used in association with languages or language tags but that is not part of language identification.",0,null],[12,"privateuse","","Private use subtags are used to indicate distinctions in language that are important in a given context by private agreement.",0,null],[0,"client","","HTTP Client",null,null],[3,"Client","hyper_sync::client","A Client to use additional features with Requests.",null,null],[3,"RequestBuilder","","Options for an individual Request.",null,null],[3,"ProxyConfig","","Proxy server configuration with a custom connector and TLS wrapper.",null,null],[4,"Body","","An enum of possible body types for a Request.",null,null],[13,"ChunkedBody","","A Reader does not necessarily know it's size, so it is chunked.",1,null],[13,"SizedBody","","For Readers that can know their size, like a `File`.",1,null],[13,"BufBody","","A String has a size, and uses Content-Length.",1,null],[4,"RedirectPolicy","","Behavior regarding how to handle redirects within a Client.",null,null],[13,"FollowNone","","Don't follow any redirects.",2,null],[13,"FollowAll","","Follow all redirects.",2,null],[13,"FollowIf","","Follow a redirect if the contained function returns true.",2,null],[0,"pool","","Client Connection Pooling",null,null],[3,"Pool","hyper_sync::client::pool","The `NetworkConnector` that behaves as a connection pool used by hyper_sync's `Client`.",null,null],[3,"Config","","Config options for the `Pool`.",null,null],[12,"max_idle","","The maximum idle connections per host.",3,null],[3,"PooledStream","","A Stream that will try to be returned to the Pool when dropped.",null,null],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"config"}}],[11,"new","","Creates a `Pool` with a `DefaultConnector`.",4,{"inputs":[{"name":"config"}],"output":{"generics":["defaultconnector"],"name":"pool"}}],[11,"with_connector","","Creates a `Pool` with a specified `NetworkConnector`.",4,{"inputs":[{"name":"config"},{"name":"c"}],"output":{"name":"pool"}}],[11,"set_idle_timeout","","Set a duration for how long an idle connection is still valid.",4,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":null}],[11,"set_stale_check","","",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"clear_idle","","Clear all idle connections from the Pool, closing them.",4,{"inputs":[{"name":"self"}],"output":null}],[11,"connect","","",4,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u16"},{"name":"str"}],"output":{"generics":["pooledstream"],"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"into_inner","","Take the wrapped stream out of the pool completely.",5,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_ref","","Gets a borrowed reference to the underlying stream.",5,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"read","","",5,null],[11,"write","","",5,null],[11,"flush","","",5,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"peer_addr","","",5,{"inputs":[{"name":"self"}],"output":{"generics":["socketaddr"],"name":"result"}}],[11,"set_read_timeout","","",5,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",5,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":{"name":"result"}}],[11,"close","","",5,{"inputs":[{"name":"self"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"set_previous_response_expected_no_content","","",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"previous_response_expected_no_content","","",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"drop","","",5,{"inputs":[{"name":"self"}],"output":null}],[0,"request","hyper_sync::client","Client Requests",null,null],[3,"Request","hyper_sync::client::request","A client request to a remote server. The W type tracks the state of the request, Fresh vs Streaming.",null,null],[12,"url","","The target URI for this request.",6,null],[12,"version","","The HTTP version of this request.",6,null],[11,"headers","","Read the Request headers.",6,{"inputs":[{"name":"self"}],"output":{"name":"headers"}}],[11,"method","","Read the Request method.",6,{"inputs":[{"name":"self"}],"output":{"name":"method"}}],[11,"set_write_timeout","","Set the write timeout.",6,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Set the read timeout.",6,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":{"name":"result"}}],[11,"with_message","","Create a new `Request<Fresh>` that will use the given `HttpMessage` for its communication with the server. This implies that the given `HttpMessage` instance has already been properly initialized by the caller (e.g. a TCP connection's already established).",6,{"inputs":[{"name":"method"},{"name":"url"},{"generics":["httpmessage"],"name":"box"}],"output":{"generics":["request"],"name":"result"}}],[11,"new","","Create a new client request.",6,{"inputs":[{"name":"method"},{"name":"url"}],"output":{"generics":["request"],"name":"result"}}],[11,"with_connector","","Create a new client request with a specific underlying NetworkStream.",6,{"inputs":[{"name":"method"},{"name":"url"},{"name":"c"}],"output":{"generics":["request"],"name":"result"}}],[11,"start","","Consume a Fresh Request, writing the headers and method, returning a Streaming Request.",6,{"inputs":[{"name":"self"}],"output":{"generics":["request"],"name":"result"}}],[11,"headers_mut","","Get a mutable reference to the Request headers.",6,{"inputs":[{"name":"self"}],"output":{"name":"headers"}}],[11,"send","","Completes writing the request, and returns a response to read from.",6,{"inputs":[{"name":"self"}],"output":{"generics":["response"],"name":"result"}}],[11,"write","","",6,null],[11,"flush","","",6,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[0,"response","hyper_sync::client","Client Responses",null,null],[3,"Response","hyper_sync::client::response","A response for a client request to a remote server.",null,null],[12,"status","","The status from the server.",7,null],[12,"headers","","The headers from the server.",7,null],[12,"version","","The HTTP version of this response from the server.",7,null],[12,"url","","The final URL of this response.",7,null],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new response from a server.",7,{"inputs":[{"name":"url"},{"generics":["networkstream"],"name":"box"}],"output":{"generics":["response"],"name":"result"}}],[11,"with_message","","Creates a new response received from the server on the given `HttpMessage`.",7,{"inputs":[{"name":"url"},{"generics":["httpmessage"],"name":"box"}],"output":{"generics":["response"],"name":"result"}}],[11,"status_raw","","Get the raw status code and reason.",7,{"inputs":[{"name":"self"}],"output":{"name":"rawstatus"}}],[11,"get_ref","","Gets a borrowed reference to the underlying `HttpMessage`.",7,{"inputs":[{"name":"self"}],"output":{"name":"httpmessage"}}],[11,"read","","",7,null],[11,"drop","","",7,{"inputs":[{"name":"self"}],"output":null}],[8,"IntoUrl","hyper_sync::client","A helper trait to convert common objects into a Url.",null,null],[10,"into_url","","Consumes the object, trying to return a Url.",8,{"inputs":[{"name":"self"}],"output":{"generics":["url","urlerror"],"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new Client.",9,{"inputs":[],"output":{"name":"client"}}],[11,"with_pool_config","","Create a new Client with a configured Pool Config.",9,{"inputs":[{"name":"config"}],"output":{"name":"client"}}],[11,"with_http_proxy","","Create a Client with an HTTP proxy to a (host, port).",9,{"inputs":[{"name":"h"},{"name":"u16"}],"output":{"name":"client"}}],[11,"with_proxy_config","","Create a Client using a proxy with a custom connector and SSL client.",9,{"inputs":[{"name":"proxyconfig"}],"output":{"name":"client"}}],[11,"with_connector","","Create a new client with a specific connector.",9,{"inputs":[{"name":"c"}],"output":{"name":"client"}}],[11,"with_protocol","","Create a new client with a specific `Protocol`.",9,{"inputs":[{"name":"p"}],"output":{"name":"client"}}],[11,"set_redirect_policy","","Set the RedirectPolicy.",9,{"inputs":[{"name":"self"},{"name":"redirectpolicy"}],"output":null}],[11,"set_read_timeout","","Set the read timeout value for all requests.",9,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":null}],[11,"set_write_timeout","","Set the write timeout value for all requests.",9,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":null}],[11,"get","","Build a Get request.",9,{"inputs":[{"name":"self"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[11,"head","","Build a Head request.",9,{"inputs":[{"name":"self"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[11,"patch","","Build a Patch request.",9,{"inputs":[{"name":"self"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[11,"post","","Build a Post request.",9,{"inputs":[{"name":"self"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[11,"put","","Build a Put request.",9,{"inputs":[{"name":"self"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[11,"delete","","Build a Delete request.",9,{"inputs":[{"name":"self"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[11,"request","","Build a new request using this Client.",9,{"inputs":[{"name":"self"},{"name":"method"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[11,"default","","",9,{"inputs":[],"output":{"name":"client"}}],[11,"body","","Set a request body to be sent.",10,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"requestbuilder"}}],[11,"headers","","Add additional headers to the request.",10,{"inputs":[{"name":"self"},{"name":"headers"}],"output":{"name":"requestbuilder"}}],[11,"header","","Add an individual new header to the request.",10,{"inputs":[{"name":"self"},{"name":"h"}],"output":{"name":"requestbuilder"}}],[11,"send","","Execute this request and receive a Response back.",10,{"inputs":[{"name":"self"}],"output":{"generics":["response"],"name":"result"}}],[11,"read","","",1,null],[11,"from","","",1,{"inputs":[{"name":"r"}],"output":{"name":"body"}}],[11,"into_url","hyper_sync","",11,{"inputs":[{"name":"self"}],"output":{"generics":["url","urlerror"],"name":"result"}}],[11,"new","hyper_sync::client","Create a new `ProxyConfig`.",12,{"inputs":[{"name":"str"},{"name":"h"},{"name":"u16"},{"name":"c"},{"name":"s"}],"output":{"name":"proxyconfig"}}],[11,"set_pool_config","","Change the `pool::Config` for the proxy.",12,{"inputs":[{"name":"self"},{"generics":["config"],"name":"option"}],"output":null}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"redirectpolicy"}}],[11,"default","","",2,{"inputs":[],"output":{"name":"redirectpolicy"}}],[0,"error","hyper_sync","Error and Result module.",null,null],[4,"ParseError","hyper_sync::error","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",13,null],[13,"IdnaError","","",13,null],[13,"InvalidPort","","",13,null],[13,"InvalidIpv4Address","","",13,null],[13,"InvalidIpv6Address","","",13,null],[13,"InvalidDomainCharacter","","",13,null],[13,"RelativeUrlWithoutBase","","",13,null],[13,"RelativeUrlWithCannotBeABaseBase","","",13,null],[13,"SetHostOnCannotBeABaseUrl","","",13,null],[13,"Overflow","","",13,null],[4,"Error","","A set of errors that can occur parsing HTTP streams.",null,null],[13,"Method","","An invalid `Method`, such as `GE,T`.",14,null],[13,"Uri","","An invalid `RequestUri`, such as `exam ple.domain`.",14,null],[13,"Version","","An invalid `HttpVersion`, such as `HTP/1.1`",14,null],[13,"Header","","An invalid `Header`.",14,null],[13,"TooLarge","","A message head is too large to be reasonable.",14,null],[13,"Status","","An invalid `Status`, such as `1337 ELITE`.",14,null],[13,"Io","","An `io::Error` that occurred while trying to read or write to a network stream.",14,null],[13,"Ssl","","An error from a SSL library.",14,null],[13,"Utf8","","Parsing a field as string failed",14,null],[6,"Result","","Result type often returned from methods that can have hyper_sync `Error`s.",null,null],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",14,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",14,{"inputs":[{"name":"self"}],"output":{"generics":["stderror"],"name":"option"}}],[11,"from","","",14,{"inputs":[{"name":"ioerror"}],"output":{"name":"error"}}],[11,"from","","",14,{"inputs":[{"name":"parseerror"}],"output":{"name":"error"}}],[11,"from","","",14,{"inputs":[{"name":"utf8error"}],"output":{"name":"error"}}],[11,"from","","",14,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"error"}}],[11,"from","","",14,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[0,"method","hyper_sync","The HTTP request method",null,null],[4,"Method","hyper_sync::method","The Request Method (VERB)",null,null],[13,"Options","","OPTIONS",15,null],[13,"Get","","GET",15,null],[13,"Post","","POST",15,null],[13,"Put","","PUT",15,null],[13,"Delete","","DELETE",15,null],[13,"Head","","HEAD",15,null],[13,"Trace","","TRACE",15,null],[13,"Connect","","CONNECT",15,null],[13,"Patch","","PATCH",15,null],[13,"Extension","","Method extensions. An example would be `let m = Extension(\"FOO\".to_string())`.",15,null],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"method"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"method"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"self"},{"name":"method"}],"output":{"name":"bool"}}],[11,"hash","","",15,null],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",15,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"safe","","Whether a method is considered \"safe\", meaning the request is essentially read-only.",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"idempotent","","Whether a method is considered \"idempotent\", meaning the request has the same result is executed multiple times.",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"from_str","","",15,{"inputs":[{"name":"str"}],"output":{"generics":["method","error"],"name":"result"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"header","hyper_sync","Headers container, and common header fields.",null,null],[3,"LanguageTag","hyper_sync::header","A language tag as described in BCP47.",null,null],[12,"language","","Language subtags are used to indicate the language, ignoring all other aspects such as script, region or spefic invariants.",0,null],[12,"extlangs","","Extended language subtags are used to identify certain specially selected languages that, for various historical and compatibility reasons, are closely identified with or tagged using an existing primary language subtag.",0,null],[12,"script","","Script subtags are used to indicate the script or writing system variations that distinguish the written forms of a language or its dialects.",0,null],[12,"region","","Region subtags are used to indicate linguistic variations associated with or appropriate to a specific country, territory, or region. Typically, a region subtag is used to indicate variations such as regional dialects or usage, or region-specific spelling conventions. It can also be used to indicate that content is expressed in a way that is appropriate for use throughout a region, for instance, Spanish content tailored to be useful throughout Latin America.",0,null],[12,"variants","","Variant subtags are used to indicate additional, well-recognized variations that define a language or its dialects that are not covered by other available subtags.",0,null],[12,"extensions","","Extensions provide a mechanism for extending language tags for use in various applications.  They are intended to identify information that is commonly used in association with languages or language tags but that is not part of language identification.",0,null],[12,"privateuse","","Private use subtags are used to indicate distinctions in language that are important in a given context by private agreement.",0,null],[3,"EntityTag","","An entity tag, defined in RFC7232",null,null],[12,"weak","","Weakness indicator for the tag",16,null],[3,"HttpDate","","A timestamp with HTTP formatting and parsing",null,null],[3,"Quality","","Represents a quality used in quality values.",null,null],[3,"QualityItem","","Represents an item with a quality value as defined in RFC7231.",null,null],[12,"item","","The actual contents of the field.",17,null],[12,"quality","","The quality (client or server preference) for the value.",17,null],[3,"AcceptCharset","","`Accept-Charset` header, defined in RFC7231",null,null],[12,"0","","",18,null],[3,"AcceptEncoding","","`Accept-Encoding` header, defined in RFC7231",null,null],[12,"0","","",19,null],[3,"AcceptLanguage","","`Accept-Language` header, defined in RFC7231",null,null],[12,"0","","",20,null],[3,"AcceptRanges","","`Accept-Ranges` header, defined in RFC7233",null,null],[12,"0","","",21,null],[3,"Accept","","`Accept` header, defined in RFC7231",null,null],[12,"0","","",22,null],[3,"AccessControlAllowCredentials","","`Access-Control-Allow-Credentials` header, part of CORS",null,null],[3,"AccessControlAllowHeaders","","`Access-Control-Allow-Headers` header, part of CORS",null,null],[12,"0","","",23,null],[3,"AccessControlAllowMethods","","`Access-Control-Allow-Methods` header, part of CORS",null,null],[12,"0","","",24,null],[3,"AccessControlExposeHeaders","","`Access-Control-Expose-Headers` header, part of CORS",null,null],[12,"0","","",25,null],[3,"AccessControlMaxAge","","`Access-Control-Max-Age` header, part of CORS",null,null],[12,"0","","",26,null],[3,"AccessControlRequestHeaders","","`Access-Control-Request-Headers` header, part of CORS",null,null],[12,"0","","",27,null],[3,"AccessControlRequestMethod","","`Access-Control-Request-Method` header, part of CORS",null,null],[12,"0","","",28,null],[3,"Allow","","`Allow` header, defined in RFC7231",null,null],[12,"0","","",29,null],[3,"Authorization","","`Authorization` header, defined in RFC7235",null,null],[12,"0","","",30,null],[3,"Basic","","Credential holder for Basic Authentication",null,null],[12,"username","","The username as a possibly empty string",31,null],[12,"password","","The password. `None` if the `:` delimiter character was not part of the parsed input. Note: A compliant client MUST always send a password (which may be the empty string).",31,null],[3,"Bearer","","Token holder for Bearer Authentication, most often seen with oauth",null,null],[12,"token","","Actual bearer token as a string",32,null],[3,"CacheControl","","`Cache-Control` header, defined in RFC7234",null,null],[12,"0","","",33,null],[3,"Connection","","`Connection` header, defined in RFC7230",null,null],[12,"0","","",34,null],[3,"ContentDisposition","","A `Content-Disposition` header, (re)defined in RFC6266.",null,null],[12,"disposition","","The disposition",35,null],[12,"parameters","","Disposition parameters",35,null],[3,"ContentEncoding","","`Content-Encoding` header, defined in RFC7231",null,null],[12,"0","","",36,null],[3,"ContentLanguage","","`Content-Language` header, defined in RFC7231",null,null],[12,"0","","",37,null],[3,"ContentLength","","`Content-Length` header, defined in RFC7230",null,null],[12,"0","","",38,null],[3,"ContentLocation","","`Content-Location` header, defined in RFC7231",null,null],[12,"0","","",39,null],[3,"ContentRange","","`Content-Range` header, defined in RFC7233",null,null],[12,"0","","",40,null],[3,"ContentType","","`Content-Type` header, defined in RFC7231",null,null],[12,"0","","",41,null],[3,"Cookie","","`Cookie` header, defined in RFC6265",null,null],[3,"CookieIter","","Iterator for cookie.",null,null],[3,"Date","","`Date` header, defined in RFC7231",null,null],[12,"0","","",42,null],[3,"ETag","","`ETag` header, defined in RFC7232",null,null],[12,"0","","",43,null],[3,"Expires","","`Expires` header, defined in RFC7234",null,null],[12,"0","","",44,null],[3,"From","","`From` header, defined in RFC7231",null,null],[12,"0","","",45,null],[3,"Host","","The `Host` header.",null,null],[3,"IfModifiedSince","","`If-Modified-Since` header, defined in RFC7232",null,null],[12,"0","","",46,null],[3,"IfUnmodifiedSince","","`If-Unmodified-Since` header, defined in RFC7232",null,null],[12,"0","","",47,null],[3,"LastEventId","","`Last-Event-ID` header, defined in RFC3864",null,null],[12,"0","","",48,null],[3,"LastModified","","`Last-Modified` header, defined in RFC7232",null,null],[12,"0","","",49,null],[3,"Link","","The `Link` header, defined in RFC5988",null,null],[3,"LinkValue","","A single `link-value` of a `Link` header, based on: RFC5988",null,null],[3,"Location","","`Location` header, defined in RFC7231",null,null],[3,"Origin","","The `Origin` header.",null,null],[3,"Prefer","","`Prefer` header, defined in RFC7240",null,null],[12,"0","","",50,null],[3,"PreferenceApplied","","`Preference-Applied` header, defined in RFC7240",null,null],[12,"0","","",51,null],[3,"ProxyAuthorization","","`Proxy-Authorization` header, defined in RFC7235",null,null],[12,"0","","",52,null],[3,"Referer","","`Referer` header, defined in RFC7231",null,null],[3,"Server","","`Server` header, defined in RFC7231",null,null],[3,"SetCookie","","`Set-Cookie` header, defined RFC6265",null,null],[12,"0","","",53,null],[3,"StrictTransportSecurity","","`StrictTransportSecurity` header, defined in RFC6797",null,null],[12,"include_subdomains","","Signals the UA that the HSTS Policy applies to this HSTS Host as well as any subdomains of the host's domain name.",54,null],[12,"max_age","","Specifies the number of seconds, after the reception of the STS header field, during which the UA regards the host (from whom the message was received) as a Known HSTS Host.",54,null],[3,"Te","","`TE` header, defined in RFC7230",null,null],[12,"0","","",55,null],[3,"TransferEncoding","","`Transfer-Encoding` header, defined in RFC7230",null,null],[12,"0","","",56,null],[3,"Upgrade","","`Upgrade` header, defined in RFC7230",null,null],[12,"0","","",57,null],[3,"Protocol","","Protocols that appear in the `Upgrade` header field",null,null],[12,"name","","The protocol identifier",58,null],[12,"version","","The optional version of the protocol, often in the format \"DIGIT.DIGIT\" (e.g.. \"1.2\")",58,null],[3,"UserAgent","","`User-Agent` header, defined in RFC7231",null,null],[3,"Warning","","`Warning` header, defined in RFC7234",null,null],[12,"code","","The 3 digit warn code.",59,null],[12,"agent","","The name or pseudonym of the server adding this header.",59,null],[12,"text","","The warning message describing the error.",59,null],[12,"date","","An optional warning date.",59,null],[3,"Raw","","A raw header value.",null,null],[3,"Formatter","","A formatter used to serialize headers to an output stream.",null,null],[3,"Headers","","A map of header fields on requests and responses.",null,null],[3,"HeadersItems","","An `Iterator` over the fields in a `Headers` map.",null,null],[3,"HeaderView","","Returned with the `HeadersItems` iterator.",null,null],[4,"Charset","","A Mime charset.",null,null],[13,"Us_Ascii","","US ASCII",60,null],[13,"Iso_8859_1","","ISO-8859-1",60,null],[13,"Iso_8859_2","","ISO-8859-2",60,null],[13,"Iso_8859_3","","ISO-8859-3",60,null],[13,"Iso_8859_4","","ISO-8859-4",60,null],[13,"Iso_8859_5","","ISO-8859-5",60,null],[13,"Iso_8859_6","","ISO-8859-6",60,null],[13,"Iso_8859_7","","ISO-8859-7",60,null],[13,"Iso_8859_8","","ISO-8859-8",60,null],[13,"Iso_8859_9","","ISO-8859-9",60,null],[13,"Iso_8859_10","","ISO-8859-10",60,null],[13,"Shift_Jis","","Shift_JIS",60,null],[13,"Euc_Jp","","EUC-JP",60,null],[13,"Iso_2022_Kr","","ISO-2022-KR",60,null],[13,"Euc_Kr","","EUC-KR",60,null],[13,"Iso_2022_Jp","","ISO-2022-JP",60,null],[13,"Iso_2022_Jp_2","","ISO-2022-JP-2",60,null],[13,"Iso_8859_6_E","","ISO-8859-6-E",60,null],[13,"Iso_8859_6_I","","ISO-8859-6-I",60,null],[13,"Iso_8859_8_E","","ISO-8859-8-E",60,null],[13,"Iso_8859_8_I","","ISO-8859-8-I",60,null],[13,"Gb2312","","GB2312",60,null],[13,"Big5","","Big5",60,null],[13,"Koi8_R","","KOI8-R",60,null],[13,"Ext","","An arbitrary charset specified as a string",60,null],[4,"Encoding","","A value to represent an encoding used in `Transfer-Encoding` or `Accept-Encoding` header.",null,null],[13,"Chunked","","The `chunked` encoding.",61,null],[13,"Brotli","","The `br` encoding.",61,null],[13,"Gzip","","The `gzip` encoding.",61,null],[13,"Deflate","","The `deflate` encoding.",61,null],[13,"Compress","","The `compress` encoding.",61,null],[13,"Identity","","The `identity` encoding.",61,null],[13,"Trailers","","The `trailers` encoding.",61,null],[13,"EncodingExt","","Some other encoding that is less common, can be any String.",61,null],[4,"RangeUnit","","Range Units, described in RFC7233",null,null],[13,"Bytes","","Indicating byte-range requests are supported.",62,null],[13,"None","","Reserved as keyword, indicating no ranges are supported.",62,null],[13,"Unregistered","","The given range unit is not registered at IANA.",62,null],[4,"AccessControlAllowOrigin","","The `Access-Control-Allow-Origin` response header, part of CORS",null,null],[13,"Any","","Allow all origins",63,null],[13,"Null","","A hidden origin",63,null],[13,"Value","","Allow one particular origin",63,null],[4,"CacheDirective","","`CacheControl` contains a list of these directives.",null,null],[13,"NoCache","","\"no-cache\"",64,null],[13,"NoStore","","\"no-store\"",64,null],[13,"NoTransform","","\"no-transform\"",64,null],[13,"OnlyIfCached","","\"only-if-cached\"",64,null],[13,"MaxAge","","\"max-age=delta\"",64,null],[13,"MaxStale","","\"max-stale=delta\"",64,null],[13,"MinFresh","","\"min-fresh=delta\"",64,null],[13,"MustRevalidate","","\"must-revalidate\"",64,null],[13,"Public","","\"public\"",64,null],[13,"Private","","\"private\"",64,null],[13,"ProxyRevalidate","","\"proxy-revalidate\"",64,null],[13,"SMaxAge","","\"s-maxage=delta\"",64,null],[13,"Extension","","Extension directives. Optionally include an argument.",64,null],[4,"ConnectionOption","","Values that can be in the `Connection` header.",null,null],[13,"KeepAlive","","The `keep-alive` connection value.",65,null],[13,"Close","","The `close` connection value.",65,null],[13,"ConnectionHeader","","Values in the Connection header that are supposed to be names of other Headers.",65,null],[4,"DispositionType","","The implied disposition of the content of the HTTP body.",null,null],[13,"Inline","","Inline implies default processing",66,null],[13,"Attachment","","Attachment implies that the recipient should prompt the user to save the response locally, rather than process it normally (as per its media type).",66,null],[13,"Ext","","Extension type.  Should be handled by recipients the same way as Attachment",66,null],[4,"DispositionParam","","A parameter to the disposition type.",null,null],[13,"Filename","","A Filename consisting of a Charset, an optional LanguageTag, and finally a sequence of bytes representing the filename",67,null],[13,"Ext","","Extension type consisting of token and value.  Recipients should ignore unrecognized parameters.",67,null],[4,"ContentRangeSpec","","Content-Range, described in RFC7233",null,null],[13,"Bytes","","Byte range",68,null],[12,"range","hyper_sync::header::ContentRangeSpec","First and last bytes of the range, omitted if request could not be satisfied",68,null],[12,"instance_length","","Total length of the instance, can be omitted if unknown",68,null],[13,"Unregistered","hyper_sync::header","Custom range, with unit not registered at IANA",68,null],[12,"unit","hyper_sync::header::ContentRangeSpec","other-range-unit",68,null],[12,"resp","","other-range-resp",68,null],[4,"Expect","hyper_sync::header","The `Expect` header.",null,null],[13,"Continue","","The value `100-continue`.",69,null],[4,"IfMatch","","`If-Match` header, defined in RFC7232",null,null],[13,"Any","","Any value is a match",70,null],[13,"Items","","Only the listed items are a match",70,null],[4,"IfNoneMatch","","`If-None-Match` header, defined in RFC7232",null,null],[13,"Any","","Any value is a match",71,null],[13,"Items","","Only the listed items are a match",71,null],[4,"IfRange","","`If-Range` header, defined in RFC7233",null,null],[13,"EntityTag","","The entity-tag the client has of the resource",72,null],[13,"Date","","The date when the client retrieved the resource",72,null],[4,"RelationType","","A Link Relation Type Enum based on: RFC5988",null,null],[13,"Alternate","","alternate.",73,null],[13,"Appendix","","appendix.",73,null],[13,"Bookmark","","bookmark.",73,null],[13,"Chapter","","chapter.",73,null],[13,"Contents","","contents.",73,null],[13,"Copyright","","copyright.",73,null],[13,"Current","","current.",73,null],[13,"DescribedBy","","describedby.",73,null],[13,"Edit","","edit.",73,null],[13,"EditMedia","","edit-media.",73,null],[13,"Enclosure","","enclosure.",73,null],[13,"First","","first.",73,null],[13,"Glossary","","glossary.",73,null],[13,"Help","","help.",73,null],[13,"Hub","","hub.",73,null],[13,"Index","","index.",73,null],[13,"Last","","last.",73,null],[13,"LatestVersion","","latest-version.",73,null],[13,"License","","license.",73,null],[13,"Next","","next.",73,null],[13,"NextArchive","","next-archive.",73,null],[13,"Payment","","payment.",73,null],[13,"Prev","","prev.",73,null],[13,"PredecessorVersion","","predecessor-version.",73,null],[13,"Previous","","previous.",73,null],[13,"PrevArchive","","prev-archive.",73,null],[13,"Related","","related.",73,null],[13,"Replies","","replies.",73,null],[13,"Section","","section.",73,null],[13,"RelationTypeSelf","","self.",73,null],[13,"Service","","service.",73,null],[13,"Start","","start.",73,null],[13,"Stylesheet","","stylesheet.",73,null],[13,"Subsection","","subsection.",73,null],[13,"SuccessorVersion","","successor-version.",73,null],[13,"Up","","up.",73,null],[13,"VersionHistory","","versionHistory.",73,null],[13,"Via","","via.",73,null],[13,"WorkingCopy","","working-copy.",73,null],[13,"WorkingCopyOf","","working-copy-of.",73,null],[13,"ExtRelType","","ext-rel-type.",73,null],[4,"MediaDesc","","A Media Descriptors Enum based on: [https://www.w3.org/TR/html401/types.html#h-6.13][url]",null,null],[13,"Screen","","screen.",74,null],[13,"Tty","","tty.",74,null],[13,"Tv","","tv.",74,null],[13,"Projection","","projection.",74,null],[13,"Handheld","","handheld.",74,null],[13,"Print","","print.",74,null],[13,"Braille","","braille.",74,null],[13,"Aural","","aural.",74,null],[13,"All","","all.",74,null],[13,"Extension","","Unrecognized media descriptor extension.",74,null],[4,"Pragma","","The `Pragma` header defined by HTTP/1.0.",null,null],[13,"NoCache","","Corresponds to the `no-cache` value.",75,null],[13,"Ext","","Every value other than `no-cache`.",75,null],[4,"Preference","","Prefer contains a list of these preferences.",null,null],[13,"RespondAsync","","\"respond-async\"",76,null],[13,"ReturnRepresentation","","\"return=representation\"",76,null],[13,"ReturnMinimal","","\"return=minimal\"",76,null],[13,"HandlingStrict","","\"handling=strict\"",76,null],[13,"HandlingLenient","","\"handling=lenient\"",76,null],[13,"Wait","","\"wait=delta\"",76,null],[13,"Extension","","Extension preferences. Always has a value, if none is specified it is just \"\". A preference can also have a list of parameters.",76,null],[4,"Range","","`Range` header, defined in RFC7233",null,null],[13,"Bytes","","Byte range",77,null],[13,"Unregistered","","Custom range, with unit not registered at IANA (`other-range-unit`: String , `other-range-set`: String)",77,null],[4,"ByteRangeSpec","","Each `Range::Bytes` header can contain one or more `ByteRangeSpecs`. Each `ByteRangeSpec` defines a range of bytes to fetch",null,null],[13,"FromTo","","Get all bytes between x and y (\"x-y\")",78,null],[13,"AllFrom","","Get all bytes starting from x (\"x-\")",78,null],[13,"Last","","Get last x bytes (\"-x\")",78,null],[4,"ReferrerPolicy","","`Referrer-Policy` header, part of Referrer Policy",null,null],[13,"NoReferrer","","`no-referrer`",79,null],[13,"NoReferrerWhenDowngrade","","`no-referrer-when-downgrade`",79,null],[13,"SameOrigin","","`same-origin`",79,null],[13,"Origin","","`origin`",79,null],[13,"OriginWhenCrossOrigin","","`origin-when-cross-origin`",79,null],[13,"UnsafeUrl","","`unsafe-url`",79,null],[13,"StrictOrigin","","`strict-origin`",79,null],[13,"StrictOriginWhenCrossOrigin","","`strict-origin-when-cross-origin`",79,null],[4,"RetryAfter","","The `Retry-After` header.",null,null],[13,"Delay","","Retry after this duration has elapsed",80,null],[13,"DateTime","","Retry after the given DateTime",80,null],[4,"ProtocolName","","A protocol name used to identify a specific protocol. Names are case-sensitive except for the `WebSocket` value.",null,null],[13,"Http","","`HTTP` value, Hypertext Transfer Protocol",81,null],[13,"Tls","","`TLS` value, Transport Layer Security RFC2817",81,null],[13,"WebSocket","","`WebSocket` value, matched case insensitively,Web Socket Protocol RFC6455",81,null],[13,"H2c","","`h2c` value, HTTP/2 over cleartext TCP",81,null],[13,"Unregistered","","Any other protocol name not known to hyper_sync",81,null],[4,"Vary","","`Vary` header, defined in RFC7231",null,null],[13,"Any","","Any value is a match",82,null],[13,"Items","","Only the listed items are a match",82,null],[5,"qitem","","Convenience function to wrap a value in a `QualityItem` Sets `q` to the default 1.0",null,{"inputs":[{"name":"t"}],"output":{"name":"qualityitem"}}],[5,"q","","Convenience function to create a `Quality` from a float or integer.",null,{"inputs":[{"name":"t"}],"output":{"name":"quality"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"acceptcharset"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"acceptcharset"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"self"},{"name":"acceptcharset"}],"output":{"name":"bool"}}],[11,"deref","","",18,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",18,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",18,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",18,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"acceptencoding"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"acceptencoding"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"self"},{"name":"acceptencoding"}],"output":{"name":"bool"}}],[11,"deref","","",19,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",19,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",19,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",19,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"acceptlanguage"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"acceptlanguage"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"self"},{"name":"acceptlanguage"}],"output":{"name":"bool"}}],[11,"deref","","",20,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",20,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",20,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",20,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"acceptranges"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"acceptranges"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"self"},{"name":"acceptranges"}],"output":{"name":"bool"}}],[11,"deref","","",21,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",21,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",21,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",21,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"rangeunit"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",62,{"inputs":[{"name":"self"},{"name":"rangeunit"}],"output":{"name":"bool"}}],[11,"ne","","",62,{"inputs":[{"name":"self"},{"name":"rangeunit"}],"output":{"name":"bool"}}],[11,"from_str","","",62,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"accept"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"self"},{"name":"accept"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"self"},{"name":"accept"}],"output":{"name":"bool"}}],[11,"deref","","",22,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",22,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",22,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",22,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"star","","A constructor to easily create `Accept: */*`.",22,{"inputs":[],"output":{"name":"accept"}}],[11,"json","","A constructor to easily create `Accept: application/json`.",22,{"inputs":[],"output":{"name":"accept"}}],[11,"text","","A constructor to easily create `Accept: text/*`.",22,{"inputs":[],"output":{"name":"accept"}}],[11,"image","","A constructor to easily create `Accept: image/*`.",22,{"inputs":[],"output":{"name":"accept"}}],[11,"clone","","",83,{"inputs":[{"name":"self"}],"output":{"name":"accesscontrolallowcredentials"}}],[11,"eq","","",83,{"inputs":[{"name":"self"},{"name":"accesscontrolallowcredentials"}],"output":{"name":"bool"}}],[11,"fmt","","",83,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"header_name","","",83,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",83,{"inputs":[{"name":"raw"}],"output":{"generics":["accesscontrolallowcredentials"],"name":"result"}}],[11,"fmt_header","","",83,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",83,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"accesscontrolallowheaders"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",23,{"inputs":[{"name":"self"},{"name":"accesscontrolallowheaders"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"self"},{"name":"accesscontrolallowheaders"}],"output":{"name":"bool"}}],[11,"deref","","",23,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",23,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",23,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",23,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"accesscontrolallowmethods"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",24,{"inputs":[{"name":"self"},{"name":"accesscontrolallowmethods"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"self"},{"name":"accesscontrolallowmethods"}],"output":{"name":"bool"}}],[11,"deref","","",24,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",24,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",24,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",24,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",63,{"inputs":[{"name":"self"}],"output":{"name":"accesscontrolalloworigin"}}],[11,"eq","","",63,{"inputs":[{"name":"self"},{"name":"accesscontrolalloworigin"}],"output":{"name":"bool"}}],[11,"ne","","",63,{"inputs":[{"name":"self"},{"name":"accesscontrolalloworigin"}],"output":{"name":"bool"}}],[11,"fmt","","",63,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"header_name","","",63,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",63,{"inputs":[{"name":"raw"}],"output":{"generics":["accesscontrolalloworigin"],"name":"result"}}],[11,"fmt_header","","",63,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",63,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"accesscontrolexposeheaders"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"accesscontrolexposeheaders"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"self"},{"name":"accesscontrolexposeheaders"}],"output":{"name":"bool"}}],[11,"deref","","",25,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",25,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",25,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",25,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"accesscontrolmaxage"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"accesscontrolmaxage"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"self"},{"name":"accesscontrolmaxage"}],"output":{"name":"bool"}}],[11,"deref","","",26,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"deref_mut","","",26,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"header_name","","",26,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",26,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"accesscontrolrequestheaders"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"accesscontrolrequestheaders"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"self"},{"name":"accesscontrolrequestheaders"}],"output":{"name":"bool"}}],[11,"deref","","",27,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",27,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",27,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",27,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"accesscontrolrequestmethod"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"accesscontrolrequestmethod"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"self"},{"name":"accesscontrolrequestmethod"}],"output":{"name":"bool"}}],[11,"deref","","",28,{"inputs":[{"name":"self"}],"output":{"name":"method"}}],[11,"deref_mut","","",28,{"inputs":[{"name":"self"}],"output":{"name":"method"}}],[11,"header_name","","",28,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",28,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"allow"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"allow"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"self"},{"name":"allow"}],"output":{"name":"bool"}}],[11,"deref","","",29,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",29,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",29,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",29,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"authorization"}}],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"authorization"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"self"},{"name":"authorization"}],"output":{"name":"bool"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",30,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"deref_mut","","",30,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"header_name","","",30,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",30,{"inputs":[{"name":"raw"}],"output":{"generics":["authorization"],"name":"result"}}],[11,"fmt_header","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"basic"}}],[11,"eq","","",31,{"inputs":[{"name":"self"},{"name":"basic"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"self"},{"name":"basic"}],"output":{"name":"bool"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"scheme","","",31,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"fmt_scheme","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",31,{"inputs":[{"name":"str"}],"output":{"generics":["basic"],"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"bearer"}}],[11,"eq","","",32,{"inputs":[{"name":"self"},{"name":"bearer"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"self"},{"name":"bearer"}],"output":{"name":"bool"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"scheme","","",32,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"fmt_scheme","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",32,{"inputs":[{"name":"str"}],"output":{"generics":["bearer"],"name":"result"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"cachecontrol"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"self"},{"name":"cachecontrol"}],"output":{"name":"bool"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"cachecontrol"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",33,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",33,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",33,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",33,{"inputs":[{"name":"raw"}],"output":{"generics":["cachecontrol"],"name":"result"}}],[11,"fmt_header","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",64,{"inputs":[{"name":"self"},{"name":"cachedirective"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"self"},{"name":"cachedirective"}],"output":{"name":"bool"}}],[11,"clone","","",64,{"inputs":[{"name":"self"}],"output":{"name":"cachedirective"}}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",64,{"inputs":[{"name":"str"}],"output":{"generics":["cachedirective","option"],"name":"result"}}],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"connectionoption"}}],[11,"eq","","",65,{"inputs":[{"name":"self"},{"name":"connectionoption"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"self"},{"name":"connectionoption"}],"output":{"name":"bool"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",65,{"inputs":[{"name":"str"}],"output":{"generics":["connectionoption"],"name":"result"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"connection"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",34,{"inputs":[{"name":"self"},{"name":"connection"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"self"},{"name":"connection"}],"output":{"name":"bool"}}],[11,"deref","","",34,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",34,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",34,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",34,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"close","","A constructor to easily create a `Connection: close` header.",34,{"inputs":[],"output":{"name":"connection"}}],[11,"keep_alive","","A constructor to easily create a `Connection: keep-alive` header.",34,{"inputs":[],"output":{"name":"connection"}}],[11,"clone","","",66,{"inputs":[{"name":"self"}],"output":{"name":"dispositiontype"}}],[11,"fmt","","",66,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",66,{"inputs":[{"name":"self"},{"name":"dispositiontype"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"self"},{"name":"dispositiontype"}],"output":{"name":"bool"}}],[11,"clone","","",67,{"inputs":[{"name":"self"}],"output":{"name":"dispositionparam"}}],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",67,{"inputs":[{"name":"self"},{"name":"dispositionparam"}],"output":{"name":"bool"}}],[11,"ne","","",67,{"inputs":[{"name":"self"},{"name":"dispositionparam"}],"output":{"name":"bool"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"contentdisposition"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"contentdisposition"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"self"},{"name":"contentdisposition"}],"output":{"name":"bool"}}],[11,"header_name","","",35,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",35,{"inputs":[{"name":"raw"}],"output":{"generics":["contentdisposition"],"name":"result"}}],[11,"fmt_header","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"contentencoding"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"contentencoding"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"self"},{"name":"contentencoding"}],"output":{"name":"bool"}}],[11,"deref","","",36,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",36,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",36,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",36,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"contentlanguage"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"contentlanguage"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"self"},{"name":"contentlanguage"}],"output":{"name":"bool"}}],[11,"deref","","",37,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",37,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",37,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",37,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"contentlength"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"contentlength"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"self"},{"name":"contentlength"}],"output":{"name":"bool"}}],[11,"header_name","","",38,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",38,{"inputs":[{"name":"raw"}],"output":{"generics":["contentlength"],"name":"result"}}],[11,"fmt_header","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",38,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"deref_mut","","",38,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"contentlocation"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"contentlocation"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"self"},{"name":"contentlocation"}],"output":{"name":"bool"}}],[11,"deref","","",39,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"deref_mut","","",39,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"header_name","","",39,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",39,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"contentrange"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",40,{"inputs":[{"name":"self"},{"name":"contentrange"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"self"},{"name":"contentrange"}],"output":{"name":"bool"}}],[11,"deref","","",40,{"inputs":[{"name":"self"}],"output":{"name":"contentrangespec"}}],[11,"deref_mut","","",40,{"inputs":[{"name":"self"}],"output":{"name":"contentrangespec"}}],[11,"header_name","","",40,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",40,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",68,{"inputs":[{"name":"self"},{"name":"contentrangespec"}],"output":{"name":"bool"}}],[11,"ne","","",68,{"inputs":[{"name":"self"},{"name":"contentrangespec"}],"output":{"name":"bool"}}],[11,"clone","","",68,{"inputs":[{"name":"self"}],"output":{"name":"contentrangespec"}}],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",68,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"contenttype"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",41,{"inputs":[{"name":"self"},{"name":"contenttype"}],"output":{"name":"bool"}}],[11,"ne","","",41,{"inputs":[{"name":"self"},{"name":"contenttype"}],"output":{"name":"bool"}}],[11,"deref","","",41,{"inputs":[{"name":"self"}],"output":{"name":"mime"}}],[11,"deref_mut","","",41,{"inputs":[{"name":"self"}],"output":{"name":"mime"}}],[11,"header_name","","",41,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",41,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"json","","A constructor  to easily create a `Content-Type: application/json` header.",41,{"inputs":[],"output":{"name":"contenttype"}}],[11,"text","","A constructor  to easily create a `Content-Type: text/plain` header.",41,{"inputs":[],"output":{"name":"contenttype"}}],[11,"text_utf8","","A constructor  to easily create a `Content-Type: text/plain; charset=utf-8` header.",41,{"inputs":[],"output":{"name":"contenttype"}}],[11,"html","","A constructor  to easily create a `Content-Type: text/html` header.",41,{"inputs":[],"output":{"name":"contenttype"}}],[11,"xml","","A constructor  to easily create a `Content-Type: text/xml` header.",41,{"inputs":[],"output":{"name":"contenttype"}}],[11,"form_url_encoded","","A constructor  to easily create a `Content-Type: application/www-form-url-encoded` header.",41,{"inputs":[],"output":{"name":"contenttype"}}],[11,"jpeg","","A constructor  to easily create a `Content-Type: image/jpeg` header.",41,{"inputs":[],"output":{"name":"contenttype"}}],[11,"png","","A constructor  to easily create a `Content-Type: image/png` header.",41,{"inputs":[],"output":{"name":"contenttype"}}],[11,"octet_stream","","A constructor  to easily create a `Content-Type: application/octet-stream` header.",41,{"inputs":[],"output":{"name":"contenttype"}}],[11,"clone","","",84,{"inputs":[{"name":"self"}],"output":{"name":"cookie"}}],[11,"new","","Creates a new `Cookie` header.",84,{"inputs":[],"output":{"name":"cookie"}}],[11,"set","","Sets a name and value for the `Cookie`.",84,{"inputs":[{"name":"self"},{"name":"k"},{"name":"v"}],"output":null}],[11,"append","","Append a name and value for the `Cookie`.",84,{"inputs":[{"name":"self"},{"name":"k"},{"name":"v"}],"output":null}],[11,"get","","Get a value for the name, if it exists.",84,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["str"],"name":"option"}}],[11,"iter","","Iterate cookies.",84,{"inputs":[{"name":"self"}],"output":{"name":"cookieiter"}}],[11,"header_name","","",84,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",84,{"inputs":[{"name":"raw"}],"output":{"generics":["cookie"],"name":"result"}}],[11,"fmt_header","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",84,{"inputs":[{"name":"self"},{"name":"cookie"}],"output":{"name":"bool"}}],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",85,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"date"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",42,{"inputs":[{"name":"self"},{"name":"date"}],"output":{"name":"bool"}}],[11,"ne","","",42,{"inputs":[{"name":"self"},{"name":"date"}],"output":{"name":"bool"}}],[11,"deref","","",42,{"inputs":[{"name":"self"}],"output":{"name":"httpdate"}}],[11,"deref_mut","","",42,{"inputs":[{"name":"self"}],"output":{"name":"httpdate"}}],[11,"header_name","","",42,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",42,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"etag"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",43,{"inputs":[{"name":"self"},{"name":"etag"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"self"},{"name":"etag"}],"output":{"name":"bool"}}],[11,"deref","","",43,{"inputs":[{"name":"self"}],"output":{"name":"entitytag"}}],[11,"deref_mut","","",43,{"inputs":[{"name":"self"}],"output":{"name":"entitytag"}}],[11,"header_name","","",43,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",43,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",69,{"inputs":[{"name":"self"}],"output":{"name":"expect"}}],[11,"eq","","",69,{"inputs":[{"name":"self"},{"name":"expect"}],"output":{"name":"bool"}}],[11,"fmt","","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"header_name","","",69,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",69,{"inputs":[{"name":"raw"}],"output":{"generics":["expect"],"name":"result"}}],[11,"fmt_header","","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"expires"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",44,{"inputs":[{"name":"self"},{"name":"expires"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"self"},{"name":"expires"}],"output":{"name":"bool"}}],[11,"deref","","",44,{"inputs":[{"name":"self"}],"output":{"name":"httpdate"}}],[11,"deref_mut","","",44,{"inputs":[{"name":"self"}],"output":{"name":"httpdate"}}],[11,"header_name","","",44,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",44,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"from"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",45,{"inputs":[{"name":"self"},{"name":"from"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"self"},{"name":"from"}],"output":{"name":"bool"}}],[11,"deref","","",45,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"deref_mut","","",45,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"header_name","","",45,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",45,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",86,{"inputs":[{"name":"self"}],"output":{"name":"host"}}],[11,"eq","","",86,{"inputs":[{"name":"self"},{"name":"host"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"self"},{"name":"host"}],"output":{"name":"bool"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a `Host` header, providing the hostname and optional port.",86,{"inputs":[{"name":"h"},{"name":"p"}],"output":{"name":"host"}}],[11,"hostname","","Get the hostname, such as example.domain.",86,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"port","","Get the optional port number.",86,{"inputs":[{"name":"self"}],"output":{"generics":["u16"],"name":"option"}}],[11,"header_name","","",86,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",86,{"inputs":[{"name":"raw"}],"output":{"generics":["host"],"name":"result"}}],[11,"fmt_header","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",86,{"inputs":[{"name":"str"}],"output":{"generics":["host"],"name":"result"}}],[11,"clone","","",70,{"inputs":[{"name":"self"}],"output":{"name":"ifmatch"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",70,{"inputs":[{"name":"self"},{"name":"ifmatch"}],"output":{"name":"bool"}}],[11,"ne","","",70,{"inputs":[{"name":"self"},{"name":"ifmatch"}],"output":{"name":"bool"}}],[11,"header_name","","",70,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",70,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"ifmodifiedsince"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",46,{"inputs":[{"name":"self"},{"name":"ifmodifiedsince"}],"output":{"name":"bool"}}],[11,"ne","","",46,{"inputs":[{"name":"self"},{"name":"ifmodifiedsince"}],"output":{"name":"bool"}}],[11,"deref","","",46,{"inputs":[{"name":"self"}],"output":{"name":"httpdate"}}],[11,"deref_mut","","",46,{"inputs":[{"name":"self"}],"output":{"name":"httpdate"}}],[11,"header_name","","",46,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",46,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",71,{"inputs":[{"name":"self"}],"output":{"name":"ifnonematch"}}],[11,"fmt","","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",71,{"inputs":[{"name":"self"},{"name":"ifnonematch"}],"output":{"name":"bool"}}],[11,"ne","","",71,{"inputs":[{"name":"self"},{"name":"ifnonematch"}],"output":{"name":"bool"}}],[11,"header_name","","",71,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",71,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",72,{"inputs":[{"name":"self"}],"output":{"name":"ifrange"}}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",72,{"inputs":[{"name":"self"},{"name":"ifrange"}],"output":{"name":"bool"}}],[11,"ne","","",72,{"inputs":[{"name":"self"},{"name":"ifrange"}],"output":{"name":"bool"}}],[11,"header_name","","",72,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",72,{"inputs":[{"name":"raw"}],"output":{"generics":["ifrange"],"name":"result"}}],[11,"fmt_header","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"ifunmodifiedsince"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",47,{"inputs":[{"name":"self"},{"name":"ifunmodifiedsince"}],"output":{"name":"bool"}}],[11,"ne","","",47,{"inputs":[{"name":"self"},{"name":"ifunmodifiedsince"}],"output":{"name":"bool"}}],[11,"deref","","",47,{"inputs":[{"name":"self"}],"output":{"name":"httpdate"}}],[11,"deref_mut","","",47,{"inputs":[{"name":"self"}],"output":{"name":"httpdate"}}],[11,"header_name","","",47,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",47,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"lasteventid"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",48,{"inputs":[{"name":"self"},{"name":"lasteventid"}],"output":{"name":"bool"}}],[11,"ne","","",48,{"inputs":[{"name":"self"},{"name":"lasteventid"}],"output":{"name":"bool"}}],[11,"header_name","","",48,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",48,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",48,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"deref_mut","","",48,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"lastmodified"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",49,{"inputs":[{"name":"self"},{"name":"lastmodified"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"self"},{"name":"lastmodified"}],"output":{"name":"bool"}}],[11,"deref","","",49,{"inputs":[{"name":"self"}],"output":{"name":"httpdate"}}],[11,"deref_mut","","",49,{"inputs":[{"name":"self"}],"output":{"name":"httpdate"}}],[11,"header_name","","",49,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",49,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",87,{"inputs":[{"name":"self"}],"output":{"name":"link"}}],[11,"eq","","",87,{"inputs":[{"name":"self"},{"name":"link"}],"output":{"name":"bool"}}],[11,"ne","","",87,{"inputs":[{"name":"self"},{"name":"link"}],"output":{"name":"bool"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",88,{"inputs":[{"name":"self"}],"output":{"name":"linkvalue"}}],[11,"eq","","",88,{"inputs":[{"name":"self"},{"name":"linkvalue"}],"output":{"name":"bool"}}],[11,"ne","","",88,{"inputs":[{"name":"self"},{"name":"linkvalue"}],"output":{"name":"bool"}}],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",74,{"inputs":[{"name":"self"}],"output":{"name":"mediadesc"}}],[11,"eq","","",74,{"inputs":[{"name":"self"},{"name":"mediadesc"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"self"},{"name":"mediadesc"}],"output":{"name":"bool"}}],[11,"fmt","","",74,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",73,{"inputs":[{"name":"self"}],"output":{"name":"relationtype"}}],[11,"eq","","",73,{"inputs":[{"name":"self"},{"name":"relationtype"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"self"},{"name":"relationtype"}],"output":{"name":"bool"}}],[11,"fmt","","",73,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create `Link` from a `Vec<LinkValue>`.",87,{"inputs":[{"generics":["linkvalue"],"name":"vec"}],"output":{"name":"link"}}],[11,"values","","Get the `Link` header's `LinkValue`s.",87,null],[11,"push_value","","Add a `LinkValue` instance to the `Link` header's values.",87,{"inputs":[{"name":"self"},{"name":"linkvalue"}],"output":null}],[11,"new","","Create `LinkValue` from URI-Reference.",88,{"inputs":[{"name":"t"}],"output":{"name":"linkvalue"}}],[11,"link","","Get the `LinkValue`'s value.",88,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"rel","","Get the `LinkValue`'s `rel` parameter(s).",88,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"anchor","","Get the `LinkValue`'s `anchor` parameter.",88,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"rev","","Get the `LinkValue`'s `rev` parameter(s).",88,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"href_lang","","Get the `LinkValue`'s `hreflang` parameter(s).",88,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"media_desc","","Get the `LinkValue`'s `media` parameter(s).",88,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"title","","Get the `LinkValue`'s `title` parameter.",88,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"title_star","","Get the `LinkValue`'s `title*` parameter.",88,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"media_type","","Get the `LinkValue`'s `type` parameter.",88,{"inputs":[{"name":"self"}],"output":{"generics":["mime"],"name":"option"}}],[11,"push_rel","","Add a `RelationType` to the `LinkValue`'s `rel` parameter.",88,{"inputs":[{"name":"self"},{"name":"relationtype"}],"output":{"name":"linkvalue"}}],[11,"set_anchor","","Set `LinkValue`'s `anchor` parameter.",88,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"linkvalue"}}],[11,"push_rev","","Add a `RelationType` to the `LinkValue`'s `rev` parameter.",88,{"inputs":[{"name":"self"},{"name":"relationtype"}],"output":{"name":"linkvalue"}}],[11,"push_href_lang","","Add a `LanguageTag` to the `LinkValue`'s `hreflang` parameter.",88,{"inputs":[{"name":"self"},{"name":"languagetag"}],"output":{"name":"linkvalue"}}],[11,"push_media_desc","","Add a `MediaDesc` to the `LinkValue`'s `media_desc` parameter.",88,{"inputs":[{"name":"self"},{"name":"mediadesc"}],"output":{"name":"linkvalue"}}],[11,"set_title","","Set `LinkValue`'s `title` parameter.",88,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"linkvalue"}}],[11,"set_title_star","","Set `LinkValue`'s `title*` parameter.",88,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"linkvalue"}}],[11,"set_media_type","","Set `LinkValue`'s `type` parameter.",88,{"inputs":[{"name":"self"},{"name":"mime"}],"output":{"name":"linkvalue"}}],[11,"header_name","","",87,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",87,{"inputs":[{"name":"raw"}],"output":{"generics":["link"],"name":"result"}}],[11,"fmt_header","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",87,{"inputs":[{"name":"str"}],"output":{"generics":["link"],"name":"result"}}],[11,"fmt","","",74,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",74,{"inputs":[{"name":"str"}],"output":{"generics":["mediadesc"],"name":"result"}}],[11,"fmt","","",73,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",73,{"inputs":[{"name":"str"}],"output":{"generics":["relationtype"],"name":"result"}}],[11,"clone","","",89,{"inputs":[{"name":"self"}],"output":{"name":"location"}}],[11,"fmt","","",89,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",89,{"inputs":[{"name":"self"},{"name":"location"}],"output":{"name":"bool"}}],[11,"ne","","",89,{"inputs":[{"name":"self"},{"name":"location"}],"output":{"name":"bool"}}],[11,"new","","Creates a new $id",89,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"deref","","",89,null],[11,"header_name","","",89,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",89,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",89,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",89,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",90,{"inputs":[{"name":"self"},{"name":"origin"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"self"},{"name":"origin"}],"output":{"name":"bool"}}],[11,"clone","","",90,{"inputs":[{"name":"self"}],"output":{"name":"origin"}}],[11,"fmt","","",90,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Origin` header.",90,{"inputs":[{"name":"s"},{"name":"h"},{"generics":["u16"],"name":"option"}],"output":{"name":"origin"}}],[11,"null","","Creates a `Null` `Origin` header.",90,{"inputs":[],"output":{"name":"origin"}}],[11,"is_null","","Checks if `Origin` is `Null`.",90,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"scheme","","The scheme, such as http or https.",90,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"host","","The host, such as `Host { hostname: \"hyper.rs\".to_owned(), port: None}`.",90,{"inputs":[{"name":"self"}],"output":{"generics":["host"],"name":"option"}}],[11,"header_name","","",90,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",90,{"inputs":[{"name":"raw"}],"output":{"generics":["origin"],"name":"result"}}],[11,"fmt_header","","",90,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",90,{"inputs":[{"name":"str"}],"output":{"generics":["origin"],"name":"result"}}],[11,"fmt","","",90,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",75,{"inputs":[{"name":"self"}],"output":{"name":"pragma"}}],[11,"eq","","",75,{"inputs":[{"name":"self"},{"name":"pragma"}],"output":{"name":"bool"}}],[11,"ne","","",75,{"inputs":[{"name":"self"},{"name":"pragma"}],"output":{"name":"bool"}}],[11,"fmt","","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"header_name","","",75,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",75,{"inputs":[{"name":"raw"}],"output":{"generics":["pragma"],"name":"result"}}],[11,"fmt_header","","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",50,{"inputs":[{"name":"self"},{"name":"prefer"}],"output":{"name":"bool"}}],[11,"ne","","",50,{"inputs":[{"name":"self"},{"name":"prefer"}],"output":{"name":"bool"}}],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"prefer"}}],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",50,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",50,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",50,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",50,{"inputs":[{"name":"raw"}],"output":{"generics":["prefer"],"name":"result"}}],[11,"fmt_header","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",76,{"inputs":[{"name":"self"},{"name":"preference"}],"output":{"name":"bool"}}],[11,"ne","","",76,{"inputs":[{"name":"self"},{"name":"preference"}],"output":{"name":"bool"}}],[11,"clone","","",76,{"inputs":[{"name":"self"}],"output":{"name":"preference"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",76,{"inputs":[{"name":"str"}],"output":{"generics":["preference","option"],"name":"result"}}],[11,"eq","","",51,{"inputs":[{"name":"self"},{"name":"preferenceapplied"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"self"},{"name":"preferenceapplied"}],"output":{"name":"bool"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"preferenceapplied"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",51,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",51,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",51,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",51,{"inputs":[{"name":"raw"}],"output":{"generics":["preferenceapplied"],"name":"result"}}],[11,"fmt_header","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"proxyauthorization"}}],[11,"eq","","",52,{"inputs":[{"name":"self"},{"name":"proxyauthorization"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"self"},{"name":"proxyauthorization"}],"output":{"name":"bool"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",52,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"deref_mut","","",52,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"header_name","","",52,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",52,{"inputs":[{"name":"raw"}],"output":{"generics":["proxyauthorization"],"name":"result"}}],[11,"fmt_header","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",77,{"inputs":[{"name":"self"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",77,{"inputs":[{"name":"self"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",77,{"inputs":[{"name":"self"}],"output":{"name":"range"}}],[11,"fmt","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",78,{"inputs":[{"name":"self"},{"name":"byterangespec"}],"output":{"name":"bool"}}],[11,"ne","","",78,{"inputs":[{"name":"self"},{"name":"byterangespec"}],"output":{"name":"bool"}}],[11,"clone","","",78,{"inputs":[{"name":"self"}],"output":{"name":"byterangespec"}}],[11,"fmt","","",78,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_satisfiable_range","","Given the full length of the entity, attempt to normalize the byte range into an satisfiable end-inclusive (from, to) range.",78,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"option"}}],[11,"bytes","","Get the most common byte range header (\"bytes=from-to\")",77,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"range"}}],[11,"bytes_multi","","Get byte range header with multiple subranges (\"bytes=from1-to1,from2-to2,fromX-toX\")",77,{"inputs":[{"name":"vec"}],"output":{"name":"range"}}],[11,"fmt","","",78,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",77,{"inputs":[{"name":"str"}],"output":{"generics":["range"],"name":"result"}}],[11,"from_str","","",78,{"inputs":[{"name":"str"}],"output":{"generics":["byterangespec"],"name":"result"}}],[11,"header_name","","",77,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",77,{"inputs":[{"name":"raw"}],"output":{"generics":["range"],"name":"result"}}],[11,"fmt_header","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",91,{"inputs":[{"name":"self"}],"output":{"name":"referer"}}],[11,"fmt","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",91,{"inputs":[{"name":"self"},{"name":"referer"}],"output":{"name":"bool"}}],[11,"ne","","",91,{"inputs":[{"name":"self"},{"name":"referer"}],"output":{"name":"bool"}}],[11,"new","","Creates a new $id",91,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"deref","","",91,null],[11,"header_name","","",91,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",91,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",79,{"inputs":[{"name":"self"}],"output":{"name":"referrerpolicy"}}],[11,"eq","","",79,{"inputs":[{"name":"self"},{"name":"referrerpolicy"}],"output":{"name":"bool"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"header_name","","",79,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",79,{"inputs":[{"name":"raw"}],"output":{"generics":["referrerpolicy"],"name":"result"}}],[11,"fmt_header","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",80,{"inputs":[{"name":"self"}],"output":{"name":"retryafter"}}],[11,"eq","","",80,{"inputs":[{"name":"self"},{"name":"retryafter"}],"output":{"name":"bool"}}],[11,"ne","","",80,{"inputs":[{"name":"self"},{"name":"retryafter"}],"output":{"name":"bool"}}],[11,"header_name","","",80,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",80,{"inputs":[{"name":"raw"}],"output":{"generics":["retryafter"],"name":"result"}}],[11,"fmt_header","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",92,{"inputs":[{"name":"self"}],"output":{"name":"server"}}],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",92,{"inputs":[{"name":"self"},{"name":"server"}],"output":{"name":"bool"}}],[11,"ne","","",92,{"inputs":[{"name":"self"},{"name":"server"}],"output":{"name":"bool"}}],[11,"new","","Creates a new $id",92,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"deref","","",92,null],[11,"header_name","","",92,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",92,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"setcookie"}}],[11,"eq","","",53,{"inputs":[{"name":"self"},{"name":"setcookie"}],"output":{"name":"bool"}}],[11,"ne","","",53,{"inputs":[{"name":"self"},{"name":"setcookie"}],"output":{"name":"bool"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",53,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",53,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",53,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",53,{"inputs":[{"name":"raw"}],"output":{"generics":["setcookie"],"name":"result"}}],[11,"fmt_header","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"stricttransportsecurity"}}],[11,"eq","","",54,{"inputs":[{"name":"self"},{"name":"stricttransportsecurity"}],"output":{"name":"bool"}}],[11,"ne","","",54,{"inputs":[{"name":"self"},{"name":"stricttransportsecurity"}],"output":{"name":"bool"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"including_subdomains","","Create an STS header that includes subdomains",54,{"inputs":[{"name":"u64"}],"output":{"name":"stricttransportsecurity"}}],[11,"excluding_subdomains","","Create an STS header that excludes subdomains",54,{"inputs":[{"name":"u64"}],"output":{"name":"stricttransportsecurity"}}],[11,"from_str","","",54,{"inputs":[{"name":"str"}],"output":{"generics":["stricttransportsecurity"],"name":"result"}}],[11,"header_name","","",54,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",54,{"inputs":[{"name":"raw"}],"output":{"generics":["stricttransportsecurity"],"name":"result"}}],[11,"fmt_header","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",55,{"inputs":[{"name":"self"}],"output":{"name":"te"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",55,{"inputs":[{"name":"self"},{"name":"te"}],"output":{"name":"bool"}}],[11,"ne","","",55,{"inputs":[{"name":"self"},{"name":"te"}],"output":{"name":"bool"}}],[11,"deref","","",55,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",55,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",55,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",55,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"transferencoding"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",56,{"inputs":[{"name":"self"},{"name":"transferencoding"}],"output":{"name":"bool"}}],[11,"ne","","",56,{"inputs":[{"name":"self"},{"name":"transferencoding"}],"output":{"name":"bool"}}],[11,"deref","","",56,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",56,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",56,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",56,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"chunked","","Constructor for the most common Transfer-Encoding, `chunked`.",56,{"inputs":[],"output":{"name":"transferencoding"}}],[11,"clone","","",57,{"inputs":[{"name":"self"}],"output":{"name":"upgrade"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",57,{"inputs":[{"name":"self"},{"name":"upgrade"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"self"},{"name":"upgrade"}],"output":{"name":"bool"}}],[11,"deref","","",57,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"deref_mut","","",57,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"header_name","","",57,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",57,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",81,{"inputs":[{"name":"self"}],"output":{"name":"protocolname"}}],[11,"fmt","","",81,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",81,{"inputs":[{"name":"self"},{"name":"protocolname"}],"output":{"name":"bool"}}],[11,"ne","","",81,{"inputs":[{"name":"self"},{"name":"protocolname"}],"output":{"name":"bool"}}],[11,"from_str","","",81,{"inputs":[{"name":"str"}],"output":{"generics":["protocolname"],"name":"result"}}],[11,"fmt","","",81,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"protocol"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",58,{"inputs":[{"name":"self"},{"name":"protocol"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"self"},{"name":"protocol"}],"output":{"name":"bool"}}],[11,"new","","Creates a new Protocol with the given name and version",58,{"inputs":[{"name":"protocolname"},{"generics":["string"],"name":"option"}],"output":{"name":"protocol"}}],[11,"from_str","","",58,{"inputs":[{"name":"str"}],"output":{"generics":["protocol"],"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",93,{"inputs":[{"name":"self"}],"output":{"name":"useragent"}}],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",93,{"inputs":[{"name":"self"},{"name":"useragent"}],"output":{"name":"bool"}}],[11,"ne","","",93,{"inputs":[{"name":"self"},{"name":"useragent"}],"output":{"name":"bool"}}],[11,"new","","Creates a new $id",93,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"deref","","",93,null],[11,"header_name","","",93,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",93,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",82,{"inputs":[{"name":"self"}],"output":{"name":"vary"}}],[11,"fmt","","",82,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",82,{"inputs":[{"name":"self"},{"name":"vary"}],"output":{"name":"bool"}}],[11,"ne","","",82,{"inputs":[{"name":"self"},{"name":"vary"}],"output":{"name":"bool"}}],[11,"header_name","","",82,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",82,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",82,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",82,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",59,{"inputs":[{"name":"self"},{"name":"warning"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"self"},{"name":"warning"}],"output":{"name":"bool"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"warning"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"header_name","","",59,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",59,{"inputs":[{"name":"raw"}],"output":{"generics":["warning"],"name":"result"}}],[11,"fmt_header","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",59,{"inputs":[{"name":"str"}],"output":{"generics":["warning"],"name":"result"}}],[11,"clone","","",94,{"inputs":[{"name":"self"}],"output":{"name":"raw"}}],[11,"fmt","","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"len","","Returns the amount of lines.",94,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"one","","Returns the line if there is only 1.",94,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"iter","","Iterate the lines of raw bytes.",94,{"inputs":[{"name":"self"}],"output":{"name":"rawlines"}}],[11,"push","","Append a line to this `Raw` header value.",94,{"inputs":[{"name":"self"},{"name":"v"}],"output":null}],[11,"eq","","",94,{"inputs":[{"name":"self"},{"name":"raw"}],"output":{"name":"bool"}}],[11,"eq","","",94,null],[11,"eq","","",94,null],[11,"eq","","",94,null],[11,"eq","","",94,null],[11,"eq","","",94,null],[11,"eq","","",94,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"from","","",94,{"inputs":[{"generics":["vec"],"name":"vec"}],"output":{"name":"raw"}}],[11,"from","","",94,{"inputs":[{"name":"string"}],"output":{"name":"raw"}}],[11,"from","","",94,{"inputs":[{"generics":["u8"],"name":"vec"}],"output":{"name":"raw"}}],[11,"from","","",94,{"inputs":[{"name":"str"}],"output":{"name":"raw"}}],[11,"from","","",94,null],[11,"from","","",94,{"inputs":[{"name":"bytes"}],"output":{"name":"raw"}}],[11,"index","","",94,null],[11,"clone","","",60,{"inputs":[{"name":"self"}],"output":{"name":"charset"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",60,{"inputs":[{"name":"self"},{"name":"charset"}],"output":{"name":"bool"}}],[11,"ne","","",60,{"inputs":[{"name":"self"},{"name":"charset"}],"output":{"name":"bool"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",60,{"inputs":[{"name":"str"}],"output":{"generics":["charset"],"name":"result"}}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"encoding"}}],[11,"eq","","",61,{"inputs":[{"name":"self"},{"name":"encoding"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"self"},{"name":"encoding"}],"output":{"name":"bool"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",61,{"inputs":[{"name":"str"}],"output":{"generics":["encoding"],"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"entitytag"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"self"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"new","","Constructs a new EntityTag. # Panics If the tag contains invalid characters.",16,{"inputs":[{"name":"bool"},{"name":"string"}],"output":{"name":"entitytag"}}],[11,"weak","","Constructs a new weak EntityTag. # Panics If the tag contains invalid characters.",16,{"inputs":[{"name":"string"}],"output":{"name":"entitytag"}}],[11,"strong","","Constructs a new strong EntityTag. # Panics If the tag contains invalid characters.",16,{"inputs":[{"name":"string"}],"output":{"name":"entitytag"}}],[11,"tag","","Get the tag.",16,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"set_tag","","Set the tag. # Panics If the tag contains invalid characters.",16,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"strong_eq","","For strong comparison two entity-tags are equivalent if both are not weak and their opaque-tags match character-by-character.",16,{"inputs":[{"name":"self"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"weak_eq","","For weak comparison two entity-tags are equivalent if their opaque-tags match character-by-character, regardless of either or both being tagged as \"weak\".",16,{"inputs":[{"name":"self"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"strong_ne","","The inverse of `EntityTag.strong_eq()`.",16,{"inputs":[{"name":"self"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"weak_ne","","The inverse of `EntityTag.weak_eq()`.",16,{"inputs":[{"name":"self"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",16,{"inputs":[{"name":"str"}],"output":{"generics":["entitytag"],"name":"result"}}],[11,"clone","","",95,{"inputs":[{"name":"self"}],"output":{"name":"httpdate"}}],[11,"fmt","","",95,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",95,{"inputs":[{"name":"self"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"ne","","",95,{"inputs":[{"name":"self"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",95,{"inputs":[{"name":"self"},{"name":"httpdate"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",95,{"inputs":[{"name":"self"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"le","","",95,{"inputs":[{"name":"self"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"gt","","",95,{"inputs":[{"name":"self"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"ge","","",95,{"inputs":[{"name":"self"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"cmp","","",95,{"inputs":[{"name":"self"},{"name":"httpdate"}],"output":{"name":"ordering"}}],[11,"from_str","","",95,{"inputs":[{"name":"str"}],"output":{"generics":["httpdate"],"name":"result"}}],[11,"fmt","","",95,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",95,{"inputs":[{"name":"systemtime"}],"output":{"name":"httpdate"}}],[11,"clone","","",96,{"inputs":[{"name":"self"}],"output":{"name":"quality"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",96,{"inputs":[{"name":"self"},{"name":"quality"}],"output":{"name":"ordering"}}],[11,"eq","","",96,{"inputs":[{"name":"self"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"ne","","",96,{"inputs":[{"name":"self"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",96,{"inputs":[{"name":"self"},{"name":"quality"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",96,{"inputs":[{"name":"self"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"le","","",96,{"inputs":[{"name":"self"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"gt","","",96,{"inputs":[{"name":"self"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"ge","","",96,{"inputs":[{"name":"self"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"default","","",96,{"inputs":[],"output":{"name":"quality"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"qualityitem"}}],[11,"eq","","",17,{"inputs":[{"name":"self"},{"name":"qualityitem"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"self"},{"name":"qualityitem"}],"output":{"name":"bool"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `QualityItem` from an item and a quality. The item can be of any type. The quality should be a value in the range [0, 1].",17,{"inputs":[{"name":"t"},{"name":"quality"}],"output":{"name":"qualityitem"}}],[11,"partial_cmp","","",17,{"inputs":[{"name":"self"},{"name":"qualityitem"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",17,{"inputs":[{"name":"str"}],"output":{"generics":["qualityitem"],"name":"result"}}],[0,"parsing","","Utility functions for Header implementations.",null,null],[3,"ExtendedValue","hyper_sync::header::parsing","An extended header parameter value (i.e., tagged with a character set and optionally, a language), as defined in RFC 5987.",null,null],[12,"charset","","The character set that is used to encode the `value` to a string.",97,null],[12,"language_tag","","The human language details of the `value`, if available.",97,null],[12,"value","","The parameter value, as expressed in octets.",97,null],[5,"from_one_raw_str","","Reads a single raw string when parsing a header.",null,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[5,"from_raw_str","","Reads a raw string into a value.",null,null],[5,"from_comma_delimited","","Reads a comma-delimited raw header into a Vec.",null,{"inputs":[{"name":"raw"}],"output":{"generics":["vec"],"name":"result"}}],[5,"fmt_comma_delimited","","Format an array into a comma-delimited string.",null,null],[5,"parse_extended_value","","Parses extended header parameter values (`ext-value`), as defined in RFC 5987.",null,{"inputs":[{"name":"str"}],"output":{"generics":["extendedvalue"],"name":"result"}}],[5,"http_percent_encode","","Percent encode a sequence of bytes with a character set defined in [https://tools.ietf.org/html/rfc5987#section-3.2][url]",null,null],[11,"clone","","",97,{"inputs":[{"name":"self"}],"output":{"name":"extendedvalue"}}],[11,"fmt","","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",97,{"inputs":[{"name":"self"},{"name":"extendedvalue"}],"output":{"name":"bool"}}],[11,"ne","","",97,{"inputs":[{"name":"self"},{"name":"extendedvalue"}],"output":{"name":"bool"}}],[11,"fmt","","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"Scheme","hyper_sync::header","An Authorization scheme to be used in the header.",null,null],[10,"scheme","","An optional Scheme name.",98,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[10,"fmt_scheme","","Format the Scheme data into a header value.",98,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"Header","","A trait for any object that will represent a header field and value.",null,null],[10,"header_name","","Returns the name of the header field this belongs to.",99,{"inputs":[],"output":{"name":"str"}}],[10,"parse_header","","Parse a header from a raw stream of bytes.",99,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[10,"fmt_header","","Format a header to outgoing stream.",99,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt_line","","Format one 'line' of a header.",100,{"inputs":[{"name":"self"},{"name":"display"}],"output":{"name":"result"}}],[11,"clone","","",101,{"inputs":[{"name":"self"}],"output":{"name":"headers"}}],[11,"default","","",101,{"inputs":[],"output":{"name":"headers"}}],[11,"new","","Creates a new, empty headers map.",101,{"inputs":[],"output":{"name":"headers"}}],[11,"with_capacity","","Creates a new `Headers` struct with space reserved for `len` headers.",101,{"inputs":[{"name":"usize"}],"output":{"name":"headers"}}],[11,"set","","Set a header field to the corresponding value.",101,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"get","","Get a reference to the header field's value, if it exists.",101,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_mut","","Get a mutable reference to the header field's value, if it exists.",101,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"has","","Returns a boolean of whether a certain header is in the map.",101,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"remove","","Removes a header from the map, if one existed. Returns the header, if one has been removed and could be parsed.",101,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"iter","","Returns an iterator over the header fields.",101,{"inputs":[{"name":"self"}],"output":{"name":"headersitems"}}],[11,"len","","Returns the number of headers in the map.",101,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"clear","","Remove all headers from the map.",101,{"inputs":[{"name":"self"}],"output":null}],[11,"get_raw","","Access the raw value of a header.",101,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["raw"],"name":"option"}}],[11,"set_raw","","Set the raw value of a header, bypassing any typed headers.",101,{"inputs":[{"name":"self"},{"name":"k"},{"name":"v"}],"output":null}],[11,"append_raw","","Append a value to raw value of this header.",101,{"inputs":[{"name":"self"},{"name":"k"},{"name":"v"}],"output":null}],[11,"remove_raw","","Remove a header by name.",101,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[11,"eq","","",101,{"inputs":[{"name":"self"},{"name":"headers"}],"output":{"name":"bool"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",102,{"inputs":[{"name":"self"}],"output":{"generics":["headerview"],"name":"option"}}],[11,"is","","Check if a HeaderView is a certain Header.",103,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"name","","Get the Header name as a slice.",103,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"value","","Cast the value to a certain Header type.",103,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"value_string","","Get just the header value as a String.",103,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"raw","","Access the raw value of the header.",103,{"inputs":[{"name":"self"}],"output":{"name":"raw"}}],[11,"fmt","","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"extend","","",101,{"inputs":[{"name":"self"},{"name":"i"}],"output":null}],[11,"extend","","",101,{"inputs":[{"name":"self"},{"name":"i"}],"output":null}],[11,"from_iter","","",101,{"inputs":[{"name":"i"}],"output":{"name":"headers"}}],[0,"http","hyper_sync","Pieces pertaining to the HTTP message protocol.",null,null],[3,"RawStatus","hyper_sync::http","The raw status code and reason-phrase.",null,null],[12,"0","","",104,null],[12,"1","","",104,null],[5,"should_keep_alive","","Checks if a connection should be kept alive.",null,{"inputs":[{"name":"httpversion"},{"name":"headers"}],"output":{"name":"bool"}}],[0,"h1","","Adapts the HTTP/1.1 implementation into the `HttpMessage` API.",null,null],[3,"Http11Message","hyper_sync::http::h1","An implementation of the `HttpMessage` trait for HTTP/1.1.",null,null],[3,"Http11Protocol","","The `Protocol` implementation provides HTTP/1.1 messages.",null,null],[3,"EndError","","",null,null],[3,"Incoming","","An Incoming Message head. Includes request/status line, and headers.",null,null],[12,"version","","HTTP version of the message.",105,null],[12,"subject","","Subject (request line or status line) of Incoming message.",105,null],[12,"headers","","Headers of the Incoming message.",105,null],[4,"HttpReader","","Readers to handle different Transfer-Encodings.",null,null],[13,"SizedReader","","A Reader used when a Content-Length header is passed with a positive integer.",106,null],[13,"ChunkedReader","","A Reader used when Transfer-Encoding is `chunked`.",106,null],[13,"EofReader","","A Reader used for responses that don't indicate a length or chunked.",106,null],[13,"EmptyReader","","A Reader used for messages that should never have a body.",106,null],[4,"HttpWriter","","Writers to handle different Transfer-Encodings.",null,null],[13,"ThroughWriter","","A no-op Writer, used initially before Transfer-Encoding is determined.",107,null],[13,"ChunkedWriter","","A Writer for when Transfer-Encoding includes `chunked`.",107,null],[13,"SizedWriter","","A Writer for when Content-Length is set.",107,null],[13,"EmptyWriter","","A writer that should not write any body.",107,null],[5,"parse_request","","Parses a request into an Incoming message head.",null,{"inputs":[{"name":"bufreader"}],"output":{"generics":["incoming"],"name":"result"}}],[5,"parse_response","","Parses a response into an Incoming message head.",null,{"inputs":[{"name":"bufreader"}],"output":{"generics":["incoming"],"name":"result"}}],[17,"CR","","The `\\r` byte.",null,null],[17,"LF","","The `\\n` byte.",null,null],[17,"LINE_ENDING","","The bytes `\\r\\n`.",null,null],[11,"fmt","","",108,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write","","",108,null],[11,"flush","","",108,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read","","",108,null],[11,"set_outgoing","","",108,{"inputs":[{"name":"self"},{"name":"requesthead"}],"output":{"generics":["requesthead"],"name":"result"}}],[11,"get_incoming","","",108,{"inputs":[{"name":"self"}],"output":{"generics":["responsehead"],"name":"result"}}],[11,"has_body","","",108,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_read_timeout","","",108,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",108,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":{"name":"result"}}],[11,"close_connection","","",108,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_proxied","","",108,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"into_inner","","Consumes the `Http11Message` and returns the underlying `NetworkStream`.",108,{"inputs":[{"name":"self"}],"output":{"generics":["networkstream"],"name":"box"}}],[11,"get_ref","","Gets a borrowed reference to the underlying `NetworkStream`, regardless of the state of the `Http11Message`.",108,{"inputs":[{"name":"self"}],"output":{"name":"networkstream"}}],[11,"get_mut","","Gets a mutable reference to the underlying `NetworkStream`, regardless of the state of the `Http11Message`.",108,{"inputs":[{"name":"self"}],"output":{"name":"networkstream"}}],[11,"with_stream","","Creates a new `Http11Message` that will use the given `NetworkStream` for communicating to the peer.",108,{"inputs":[{"generics":["networkstream"],"name":"box"}],"output":{"name":"http11message"}}],[11,"flush_outgoing","","Flushes the current outgoing content and moves the stream into the `stream` property.",108,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"new_message","","",109,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u16"},{"name":"str"}],"output":{"generics":["box"],"name":"result"}}],[11,"with_connector","","Creates a new `Http11Protocol` instance that will use the given `NetworkConnector` for establishing HTTP connections.",109,{"inputs":[{"name":"c"}],"output":{"name":"http11protocol"}}],[11,"into_inner","","Unwraps this HttpReader and returns the underlying Reader.",106,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"get_ref","","Gets a borrowed reference to the underlying Reader.",106,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"get_mut","","Gets a mutable reference to the underlying Reader.",106,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"fmt","","",106,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",106,null],[11,"into_inner","","Unwraps the HttpWriter and returns the underlying Writer.",107,{"inputs":[{"name":"self"}],"output":{"name":"w"}}],[11,"get_ref","","Access the inner Writer.",107,{"inputs":[{"name":"self"}],"output":{"name":"w"}}],[11,"get_mut","","Access the inner Writer mutably.",107,{"inputs":[{"name":"self"}],"output":{"name":"w"}}],[11,"end","","Ends the HttpWriter, and returns the underlying Writer.",107,{"inputs":[{"name":"self"}],"output":{"generics":["enderror"],"name":"result"}}],[11,"fmt","","",110,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write","","",107,null],[11,"flush","","",107,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","","",107,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",105,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"message","hyper_sync::http","Defines the `HttpMessage` trait that serves to encapsulate the operations of a single request-response cycle on any HTTP connection.",null,null],[3,"RequestHead","hyper_sync::http::message","Describes a request.",null,null],[12,"headers","","The headers of the request",111,null],[12,"method","","The method of the request",111,null],[12,"url","","The URL of the request",111,null],[3,"ResponseHead","","Describes a response.",null,null],[12,"headers","","The headers of the reponse",112,null],[12,"raw_status","","The raw status line of the response",112,null],[12,"version","","The HTTP/2 version which generated the response",112,null],[8,"Protocol","","The trait provides an API for creating new `HttpMessage`s depending on the underlying HTTP protocol.",null,null],[10,"new_message","","Creates a fresh `HttpMessage` bound to the given host, based on the given protocol scheme.",113,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u16"},{"name":"str"}],"output":{"generics":["box"],"name":"result"}}],[8,"HttpMessage","","The trait provides an API for sending an receiving HTTP messages.",null,null],[10,"set_outgoing","","Initiates a new outgoing request.",114,{"inputs":[{"name":"self"},{"name":"requesthead"}],"output":{"generics":["requesthead"],"name":"result"}}],[10,"get_incoming","","Obtains the incoming response and returns its head (i.e. the `ResponseHead` struct)",114,{"inputs":[{"name":"self"}],"output":{"generics":["responsehead"],"name":"result"}}],[10,"set_read_timeout","","Set the read timeout duration for this message.",114,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":{"name":"result"}}],[10,"set_write_timeout","","Set the write timeout duration for this message.",114,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":{"name":"result"}}],[10,"close_connection","","Closes the underlying HTTP connection.",114,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"has_body","","Returns whether the incoming message has a body.",114,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_proxied","","Called when the Client wishes to use a Proxy.",114,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"clone","","",111,{"inputs":[{"name":"self"}],"output":{"name":"requesthead"}}],[11,"fmt","","",111,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",112,{"inputs":[{"name":"self"}],"output":{"name":"responsehead"}}],[11,"fmt","","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Is the underlying type in this trait object a T?",114,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"downcast_ref","","If the underlying type is T, get a reference to the contained data.",114,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"downcast_mut","","If the underlying type is T, get a mutable reference to the contained data.",114,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"downcast","","If the underlying type is T, extract it.",114,{"inputs":[{"generics":["httpmessage"],"name":"box"}],"output":{"generics":["box","box"],"name":"result"}}],[11,"clone","hyper_sync::http","",104,{"inputs":[{"name":"self"}],"output":{"name":"rawstatus"}}],[11,"eq","","",104,{"inputs":[{"name":"self"},{"name":"rawstatus"}],"output":{"name":"bool"}}],[11,"ne","","",104,{"inputs":[{"name":"self"},{"name":"rawstatus"}],"output":{"name":"bool"}}],[11,"fmt","","",104,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"net","hyper_sync","A collection of traits abstracting over Listeners and Streams.",null,null],[3,"NetworkConnections","hyper_sync::net","An iterator wrapper over a `NetworkAcceptor`.",null,null],[3,"HttpListener","","A `NetworkListener` for `HttpStream`s.",null,null],[3,"HttpStream","","A wrapper around a `TcpStream`.",null,null],[12,"0","","",115,null],[3,"HttpConnector","","A connector that will produce HttpStreams.",null,null],[3,"HttpsListener","","A Http Listener over SSL.",null,null],[3,"HttpsConnector","","A connector that can protect HTTP streams using SSL.",null,null],[4,"Fresh","","The write-status indicating headers have not been written.",null,null],[4,"Streaming","","The write-status indicating headers have been written.",null,null],[4,"HttpsStream","","A stream over the HTTP protocol, possibly protected by SSL.",null,null],[13,"Http","","A plain text stream.",116,null],[13,"Https","","A stream protected by SSL.",116,null],[8,"NetworkListener","","An abstraction to listen for connections on a certain port.",null,null],[16,"Stream","","The stream produced for each connection.",117,null],[10,"accept","","Returns an iterator of streams.",117,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"local_addr","","Get the address this Listener ended up listening on.",117,{"inputs":[{"name":"self"}],"output":{"generics":["socketaddr"],"name":"result"}}],[11,"incoming","","Returns an iterator over incoming connections.",117,{"inputs":[{"name":"self"}],"output":{"name":"networkconnections"}}],[11,"set_read_timeout","","Sets the read timeout for all streams that are accepted",117,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":null}],[11,"set_write_timeout","","Sets the write timeout for all streams that are accepted",117,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":null}],[8,"NetworkStream","","An abstraction over streams that a `Server` can utilize.",null,null],[10,"peer_addr","","Get the remote address of the underlying connection.",118,{"inputs":[{"name":"self"}],"output":{"generics":["socketaddr"],"name":"result"}}],[10,"set_read_timeout","","Set the maximum time to wait for a read to complete.",118,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":{"name":"result"}}],[10,"set_write_timeout","","Set the maximum time to wait for a write to complete.",118,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":{"name":"result"}}],[11,"close","","This will be called when Stream should no longer be kept alive.",118,{"inputs":[{"name":"self"},{"name":"shutdown"}],"output":{"name":"result"}}],[8,"NetworkConnector","","A connector creates a NetworkStream.",null,null],[16,"Stream","","Type of `Stream` to create",119,null],[10,"connect","","Connect to a remote address.",119,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u16"},{"name":"str"}],"output":{"name":"result"}}],[8,"SslClient","","An abstraction to allow any SSL implementation to be used with client-side HttpsStreams.",null,null],[16,"Stream","","The protected stream.",120,null],[10,"wrap_client","","Wrap a client stream with SSL.",120,{"inputs":[{"name":"self"},{"name":"t"},{"name":"str"}],"output":{"name":"result"}}],[8,"SslServer","","An abstraction to allow any SSL implementation to be used with server-side HttpsStreams.",null,null],[16,"Stream","","The protected stream.",121,null],[10,"wrap_server","","Wrap a server stream with SSL.",121,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"next","","",122,{"inputs":[{"name":"self"}],"output":{"generics":["result"],"name":"option"}}],[11,"is","","Is the underlying type in this trait object a `T`?",118,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"downcast_ref","","If the underlying type is `T`, get a reference to the contained data.",118,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"downcast_mut","","If the underlying type is `T`, get a mutable reference to the contained data.",118,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"downcast","","If the underlying type is `T`, extract it.",118,{"inputs":[{"generics":["networkstream"],"name":"box"}],"output":{"generics":["box","box"],"name":"result"}}],[11,"is","","Is the underlying type in this trait object a `T`?",118,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"downcast_ref","","If the underlying type is `T`, get a reference to the contained data.",118,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"downcast_mut","","If the underlying type is `T`, get a mutable reference to the contained data.",118,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"downcast","","If the underlying type is `T`, extract it.",118,{"inputs":[{"generics":["networkstream"],"name":"box"}],"output":{"generics":["box","box"],"name":"result"}}],[11,"clone","","",123,{"inputs":[{"name":"self"}],"output":{"name":"httplistener"}}],[11,"from","","",123,{"inputs":[{"name":"tcplistener"}],"output":{"name":"httplistener"}}],[11,"new","","Start listening to an address over HTTP.",123,{"inputs":[{"name":"to"}],"output":{"generics":["httplistener"],"name":"result"}}],[11,"accept","","",123,{"inputs":[{"name":"self"}],"output":{"generics":["httpstream"],"name":"result"}}],[11,"local_addr","","",123,{"inputs":[{"name":"self"}],"output":{"generics":["socketaddr"],"name":"result"}}],[11,"set_read_timeout","","",123,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":null}],[11,"set_write_timeout","","",123,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":null}],[11,"as_raw_fd","","",123,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"from_raw_fd","","",123,{"inputs":[{"name":"rawfd"}],"output":{"name":"httplistener"}}],[11,"clone","","",115,{"inputs":[{"name":"self"}],"output":{"name":"httpstream"}}],[11,"fmt","","",115,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",115,null],[11,"write","","",115,null],[11,"flush","","",115,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"as_raw_fd","","",115,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"from_raw_fd","","",115,{"inputs":[{"name":"rawfd"}],"output":{"name":"httpstream"}}],[11,"peer_addr","","",115,{"inputs":[{"name":"self"}],"output":{"generics":["socketaddr"],"name":"result"}}],[11,"set_read_timeout","","",115,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",115,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":{"name":"result"}}],[11,"close","","",115,{"inputs":[{"name":"self"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"fmt","","",124,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",124,{"inputs":[{"name":"self"}],"output":{"name":"httpconnector"}}],[11,"default","","",124,{"inputs":[],"output":{"name":"httpconnector"}}],[11,"connect","","",124,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u16"},{"name":"str"}],"output":{"generics":["httpstream"],"name":"result"}}],[11,"fmt","","",116,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",116,{"inputs":[{"name":"self"}],"output":{"name":"httpsstream"}}],[11,"read","","",116,null],[11,"write","","",116,null],[11,"flush","","",116,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"peer_addr","","",116,{"inputs":[{"name":"self"}],"output":{"generics":["socketaddr"],"name":"result"}}],[11,"set_read_timeout","","",116,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",116,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":{"name":"result"}}],[11,"close","","",116,{"inputs":[{"name":"self"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"clone","","",125,{"inputs":[{"name":"self"}],"output":{"name":"httpslistener"}}],[11,"new","","Start listening to an address over HTTPS.",125,{"inputs":[{"name":"to"},{"name":"s"}],"output":{"generics":["httpslistener"],"name":"result"}}],[11,"with_listener","","Construct an HttpsListener from a bound `TcpListener`.",125,{"inputs":[{"name":"httplistener"},{"name":"s"}],"output":{"name":"httpslistener"}}],[11,"accept","","",125,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"local_addr","","",125,{"inputs":[{"name":"self"}],"output":{"generics":["socketaddr"],"name":"result"}}],[11,"set_read_timeout","","",125,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":null}],[11,"set_write_timeout","","",125,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":null}],[11,"fmt","","",126,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",126,{"inputs":[],"output":{"name":"httpsconnector"}}],[11,"new","","Create a new connector using the provided SSL implementation.",126,{"inputs":[{"name":"s"}],"output":{"generics":["httpconnector"],"name":"httpsconnector"}}],[11,"with_connector","","Create a new connector using the provided SSL implementation.",126,{"inputs":[{"name":"s"},{"name":"c"}],"output":{"name":"httpsconnector"}}],[11,"connect","","",126,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u16"},{"name":"str"}],"output":{"name":"result"}}],[0,"server","hyper_sync","HTTP Server",null,null],[3,"Server","hyper_sync::server","A server can listen on a TCP socket.",null,null],[3,"Listening","","A listening server, which can later be closed.",null,null],[12,"socket","","The socket addresses that the server is bound to.",127,null],[0,"request","","Server Requests",null,null],[3,"Request","hyper_sync::server::request","A request bundles several parts of an incoming `NetworkStream`, given to a `Handler`.",null,null],[12,"remote_addr","","The IP address of the remote connection.",128,null],[12,"method","","The `Method`, such as `Get`, `Post`, etc.",128,null],[12,"headers","","The headers of the incoming request.",128,null],[12,"uri","","The target request-uri for this request.",128,null],[12,"version","","The version of HTTP for this request.",128,null],[11,"new","","Create a new Request, reading the StartLine and Headers so they are immediately useful.",128,{"inputs":[{"name":"bufreader"},{"name":"socketaddr"}],"output":{"generics":["request"],"name":"result"}}],[11,"set_read_timeout","","Set the read timeout of the underlying NetworkStream.",128,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":{"name":"result"}}],[11,"downcast_ref","","Get a reference to the underlying `NetworkStream`.",128,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"ssl","","Get a reference to the underlying Ssl stream, if connected over HTTPS.",128,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"deconstruct","","Deconstruct a Request into its constituent parts.",128,null],[11,"read","","",128,null],[0,"response","hyper_sync::server","Server Responses",null,null],[3,"Response","hyper_sync::server::response","The outgoing half for a Tcp connection, created by a `Server` and given to a `Handler`.",null,null],[12,"version","","The HTTP version of this response.",129,null],[11,"fmt","","",129,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"status","","The status of this response.",129,{"inputs":[{"name":"self"}],"output":{"name":"statuscode"}}],[11,"headers","","The headers of this response.",129,{"inputs":[{"name":"self"}],"output":{"name":"headers"}}],[11,"construct","","Construct a Response from its constituent parts.",129,{"inputs":[{"name":"httpversion"},{"generics":["write"],"name":"httpwriter"},{"name":"statuscode"},{"name":"headers"}],"output":{"generics":["fresh"],"name":"response"}}],[11,"deconstruct","","Deconstruct this Response into its constituent parts.",129,null],[11,"new","","Creates a new Response that can be used to write to a network stream.",129,{"inputs":[{"name":"write"},{"name":"headers"}],"output":{"generics":["fresh"],"name":"response"}}],[11,"send","","Writes the body and ends the response.",129,null],[11,"start","","Consume this Response, writing the Headers and Status and creating a Response",129,{"inputs":[{"name":"self"}],"output":{"generics":["response"],"name":"result"}}],[11,"status_mut","","Get a mutable reference to the status.",129,{"inputs":[{"name":"self"}],"output":{"name":"statuscode"}}],[11,"headers_mut","","Get a mutable reference to the Headers.",129,{"inputs":[{"name":"self"}],"output":{"name":"headers"}}],[11,"end","","Flushes all writing of a response to the client.",129,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"write","","",129,null],[11,"flush","","",129,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"drop","","",129,{"inputs":[{"name":"self"}],"output":null}],[8,"Handler","hyper_sync::server","A handler that can handle incoming requests for a server.",null,null],[10,"handle","","Receives a `Request`/`Response` pair, and should perform some action on them.",130,{"inputs":[{"name":"self"},{"name":"request"},{"generics":["fresh"],"name":"response"}],"output":null}],[11,"check_continue","","Called when a Request includes a `Expect: 100-continue` header.",130,null],[11,"on_connection_start","","This is run after a connection is received, on a per-connection basis (not a per-request basis, as a connection with keep-alive may handle multiple requests)",130,{"inputs":[{"name":"self"}],"output":null}],[11,"on_connection_end","","This is run before a connection is closed, on a per-connection basis (not a per-request basis, as a connection with keep-alive may handle multiple requests)",130,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",131,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new server with the provided handler.",131,{"inputs":[{"name":"l"}],"output":{"name":"server"}}],[11,"keep_alive","","Controls keep-alive for this server.",131,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":null}],[11,"set_read_timeout","","Sets the read timeout for all Request reads.",131,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":null}],[11,"set_write_timeout","","Sets the write timeout for all Response writes.",131,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":null}],[11,"local_addr","","Get the address that the server is listening on.",131,{"inputs":[{"name":"self"}],"output":{"generics":["socketaddr"],"name":"result"}}],[11,"http","","Creates a new server that will handle `HttpStream`s.",131,{"inputs":[{"name":"to"}],"output":{"generics":["server"],"name":"result"}}],[11,"https","","Creates a new server that will handle `HttpStream`s over SSL.",131,{"inputs":[{"name":"a"},{"name":"s"}],"output":{"generics":["server"],"name":"result"}}],[11,"handle","","Binds to a socket and starts handling connections.",131,{"inputs":[{"name":"self"},{"name":"h"}],"output":{"generics":["listening"],"name":"result"}}],[11,"handle_threads","","Binds to a socket and starts handling connections with the provided number of threads.",131,{"inputs":[{"name":"self"},{"name":"h"},{"name":"usize"}],"output":{"generics":["listening"],"name":"result"}}],[11,"fmt","","",127,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",127,{"inputs":[{"name":"self"}],"output":null}],[11,"close","","Warning: This function doesn't work. The server remains listening after you called it. See https://github.com/hyperium/hyper/issues/338 for more details.",127,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[0,"status","hyper_sync","HTTP status codes",null,null],[4,"StatusCode","hyper_sync::status","An HTTP status code (`status-code` in RFC 7230 et al.).",null,null],[13,"Continue","","100 Continue [RFC7231, Section 6.2.1]",132,null],[13,"SwitchingProtocols","","101 Switching Protocols [RFC7231, Section 6.2.2]",132,null],[13,"Processing","","102 Processing [RFC2518]",132,null],[13,"Ok","","200 OK [RFC7231, Section 6.3.1]",132,null],[13,"Created","","201 Created [RFC7231, Section 6.3.2]",132,null],[13,"Accepted","","202 Accepted [RFC7231, Section 6.3.3]",132,null],[13,"NonAuthoritativeInformation","","203 Non-Authoritative Information [RFC7231, Section 6.3.4]",132,null],[13,"NoContent","","204 No Content [RFC7231, Section 6.3.5]",132,null],[13,"ResetContent","","205 Reset Content [RFC7231, Section 6.3.6]",132,null],[13,"PartialContent","","206 Partial Content [RFC7233, Section 4.1]",132,null],[13,"MultiStatus","","207 Multi-Status [RFC4918]",132,null],[13,"AlreadyReported","","208 Already Reported [RFC5842]",132,null],[13,"ImUsed","","226 IM Used [RFC3229]",132,null],[13,"MultipleChoices","","300 Multiple Choices [RFC7231, Section 6.4.1]",132,null],[13,"MovedPermanently","","301 Moved Permanently [RFC7231, Section 6.4.2]",132,null],[13,"Found","","302 Found [RFC7231, Section 6.4.3]",132,null],[13,"SeeOther","","303 See Other [RFC7231, Section 6.4.4]",132,null],[13,"NotModified","","304 Not Modified [RFC7232, Section 4.1]",132,null],[13,"UseProxy","","305 Use Proxy [RFC7231, Section 6.4.5]",132,null],[13,"TemporaryRedirect","","307 Temporary Redirect [RFC7231, Section 6.4.7]",132,null],[13,"PermanentRedirect","","308 Permanent Redirect [RFC7238]",132,null],[13,"BadRequest","","400 Bad Request [RFC7231, Section 6.5.1]",132,null],[13,"Unauthorized","","401 Unauthorized [RFC7235, Section 3.1]",132,null],[13,"PaymentRequired","","402 Payment Required [RFC7231, Section 6.5.2]",132,null],[13,"Forbidden","","403 Forbidden [RFC7231, Section 6.5.3]",132,null],[13,"NotFound","","404 Not Found [RFC7231, Section 6.5.4]",132,null],[13,"MethodNotAllowed","","405 Method Not Allowed [RFC7231, Section 6.5.5]",132,null],[13,"NotAcceptable","","406 Not Acceptable [RFC7231, Section 6.5.6]",132,null],[13,"ProxyAuthenticationRequired","","407 Proxy Authentication Required [RFC7235, Section 3.2]",132,null],[13,"RequestTimeout","","408 Request Timeout [RFC7231, Section 6.5.7]",132,null],[13,"Conflict","","409 Conflict [RFC7231, Section 6.5.8]",132,null],[13,"Gone","","410 Gone [RFC7231, Section 6.5.9]",132,null],[13,"LengthRequired","","411 Length Required [RFC7231, Section 6.5.10]",132,null],[13,"PreconditionFailed","","412 Precondition Failed [RFC7232, Section 4.2]",132,null],[13,"PayloadTooLarge","","413 Payload Too Large [RFC7231, Section 6.5.11]",132,null],[13,"UriTooLong","","414 URI Too Long [RFC7231, Section 6.5.12]",132,null],[13,"UnsupportedMediaType","","415 Unsupported Media Type [RFC7231, Section 6.5.13]",132,null],[13,"RangeNotSatisfiable","","416 Range Not Satisfiable [RFC7233, Section 4.4]",132,null],[13,"ExpectationFailed","","417 Expectation Failed [RFC7231, Section 6.5.14]",132,null],[13,"ImATeapot","","418 I'm a teapot [curiously, not registered by IANA, but RFC2324]",132,null],[13,"MisdirectedRequest","","421 Misdirected Request RFC7540, Section 9.1.2",132,null],[13,"UnprocessableEntity","","422 Unprocessable Entity [RFC4918]",132,null],[13,"Locked","","423 Locked [RFC4918]",132,null],[13,"FailedDependency","","424 Failed Dependency [RFC4918]",132,null],[13,"UpgradeRequired","","426 Upgrade Required [RFC7231, Section 6.5.15]",132,null],[13,"PreconditionRequired","","428 Precondition Required [RFC6585]",132,null],[13,"TooManyRequests","","429 Too Many Requests [RFC6585]",132,null],[13,"RequestHeaderFieldsTooLarge","","431 Request Header Fields Too Large [RFC6585]",132,null],[13,"UnavailableForLegalReasons","","451 Unavailable For Legal Reasons [RFC7725]",132,null],[13,"InternalServerError","","500 Internal Server Error [RFC7231, Section 6.6.1]",132,null],[13,"NotImplemented","","501 Not Implemented [RFC7231, Section 6.6.2]",132,null],[13,"BadGateway","","502 Bad Gateway [RFC7231, Section 6.6.3]",132,null],[13,"ServiceUnavailable","","503 Service Unavailable [RFC7231, Section 6.6.4]",132,null],[13,"GatewayTimeout","","504 Gateway Timeout [RFC7231, Section 6.6.5]",132,null],[13,"HttpVersionNotSupported","","505 HTTP Version Not Supported [RFC7231, Section 6.6.6]",132,null],[13,"VariantAlsoNegotiates","","506 Variant Also Negotiates [RFC2295]",132,null],[13,"InsufficientStorage","","507 Insufficient Storage [RFC4918]",132,null],[13,"LoopDetected","","508 Loop Detected [RFC5842]",132,null],[13,"NotExtended","","510 Not Extended [RFC2774]",132,null],[13,"NetworkAuthenticationRequired","","511 Network Authentication Required [RFC6585]",132,null],[13,"Unregistered","","A status code not in the IANA HTTP status code registry or very well known",132,null],[4,"StatusClass","","The class of an HTTP `status-code`.",null,null],[13,"Informational","","1xx (Informational): The request was received, continuing process",133,null],[13,"Success","","2xx (Success): The request was successfully received, understood, and accepted",133,null],[13,"Redirection","","3xx (Redirection): Further action needs to be taken in order to complete the request",133,null],[13,"ClientError","","4xx (Client Error): The request contains bad syntax or cannot be fulfilled",133,null],[13,"ServerError","","5xx (Server Error): The server failed to fulfill an apparently valid request",133,null],[13,"NoClass","","A status code lower than 100 or higher than 599. These codes do no belong to any class.",133,null],[11,"fmt","","",132,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",132,null],[11,"canonical_reason","","Get the standardised `reason-phrase` for this status code.",132,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"class","","Determine the class of a status code, based on its first digit.",132,{"inputs":[{"name":"self"}],"output":{"name":"statusclass"}}],[11,"is_informational","","Check if class is Informational.",132,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_success","","Check if class is Success.",132,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_redirection","","Check if class is Redirection.",132,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_client_error","","Check if class is ClientError.",132,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_server_error","","Check if class is ServerError.",132,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_strange_status","","Check if class is NoClass",132,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",132,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",132,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"clone","","",132,{"inputs":[{"name":"self"}],"output":{"name":"statuscode"}}],[11,"partial_cmp","","",132,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",132,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"name":"ordering"}}],[11,"fmt","","",133,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",133,{"inputs":[{"name":"self"}],"output":{"name":"statusclass"}}],[11,"eq","","",133,{"inputs":[{"name":"self"},{"name":"statusclass"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",133,{"inputs":[{"name":"self"},{"name":"statusclass"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",133,{"inputs":[{"name":"self"},{"name":"statusclass"}],"output":{"name":"ordering"}}],[11,"default_code","","Get the default status code for the class.",133,{"inputs":[{"name":"self"}],"output":{"name":"statuscode"}}],[0,"uri","hyper_sync","HTTP RequestUris",null,null],[4,"RequestUri","hyper_sync::uri","The Request-URI of a Request's StartLine.",null,null],[13,"AbsolutePath","","The most common request target, an absolute path and optional query.",134,null],[13,"AbsoluteUri","","An absolute URI. Used in conjunction with proxies.",134,null],[13,"Authority","","The authority form is only for use with `CONNECT` requests.",134,null],[13,"Star","","The star is used to target the entire server, instead of a specific resource.",134,null],[11,"fmt","","",134,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",134,{"inputs":[{"name":"self"},{"name":"requesturi"}],"output":{"name":"bool"}}],[11,"ne","","",134,{"inputs":[{"name":"self"},{"name":"requesturi"}],"output":{"name":"bool"}}],[11,"clone","","",134,{"inputs":[{"name":"self"}],"output":{"name":"requesturi"}}],[11,"from_str","","",134,{"inputs":[{"name":"str"}],"output":{"generics":["requesturi","error"],"name":"result"}}],[11,"fmt","","",134,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"version","hyper_sync","HTTP Versions enum",null,null],[4,"HttpVersion","hyper_sync::version","Represents a version of the HTTP spec.",null,null],[13,"Http09","","`HTTP/0.9`",135,null],[13,"Http10","","`HTTP/1.0`",135,null],[13,"Http11","","`HTTP/1.1`",135,null],[13,"Http20","","`HTTP/2.0`",135,null],[11,"eq","","",135,{"inputs":[{"name":"self"},{"name":"httpversion"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",135,{"inputs":[{"name":"self"},{"name":"httpversion"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",135,{"inputs":[{"name":"self"}],"output":{"name":"httpversion"}}],[11,"cmp","","",135,{"inputs":[{"name":"self"},{"name":"httpversion"}],"output":{"name":"ordering"}}],[11,"hash","","",135,null],[11,"fmt","","",135,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",135,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",135,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from_str","","",135,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[0,"mime","hyper_sync","Re-exporting the mime crate, for convenience.",null,null],[14,"header","","",null,null],[11,"parse","","Parse an absolute URL from a string.",11,{"inputs":[{"name":"str"}],"output":{"generics":["url","parseerror"],"name":"result"}}],[11,"parse_with_params","","Parse an absolute URL from a string and add params to its query string.",11,{"inputs":[{"name":"str"},{"name":"i"}],"output":{"generics":["url","parseerror"],"name":"result"}}],[11,"join","","Parse a string as an URL, with this URL as the base URL.",11,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["url","parseerror"],"name":"result"}}],[11,"options","","Return a default `ParseOptions` that can fully configure the URL parser.",11,{"inputs":[],"output":{"name":"parseoptions"}}],[11,"as_str","","Return the serialization of this URL.",11,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"into_string","","Return the serialization of this URL.",11,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"origin","","Return the origin of this URL (https://url.spec.whatwg.org/#origin)",11,{"inputs":[{"name":"self"}],"output":{"name":"origin"}}],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII string without the ':' delimiter.",11,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"has_authority","","Return whether the URL has an 'authority', which can contain a username, password, host, and port number.",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL, meaning that parsing a relative URL string with this URL as the base will return an error.",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"username","","Return the username for this URL (typically the empty string) as a percent-encoded ASCII string.",11,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"password","","Return the password for this URL, if any, as a percent-encoded ASCII string.",11,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"has_host","","Equivalent to `url.host().is_some()`.",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"host_str","","Return the string representation of the host (domain or IP address) for this URL, if any.",11,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"host","","Return the parsed representation of the host for this URL. Non-ASCII domain labels are punycode-encoded per IDNA.",11,{"inputs":[{"name":"self"}],"output":{"generics":["host"],"name":"option"}}],[11,"domain","","If this URL has a host and it is a domain name (not an IP address), return it.",11,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"port","","Return the port number for this URL, if any.",11,{"inputs":[{"name":"self"}],"output":{"generics":["u16"],"name":"option"}}],[11,"port_or_known_default","","Return the port number for this URL, or the default port number if it is known.",11,{"inputs":[{"name":"self"}],"output":{"generics":["u16"],"name":"option"}}],[11,"with_default_port","","If the URL has a host, return something that implements `ToSocketAddrs`.",11,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["hostandport","error"],"name":"result"}}],[11,"path","","Return the path for this URL, as a percent-encoded ASCII string. For cannot-be-a-base URLs, this is an arbitrary string that doesn’t start with '/'. For other URLs, this starts with a '/' slash and continues with slash-separated path segments.",11,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"path_segments","","Unless this URL is cannot-be-a-base, return an iterator of '/' slash-separated path segments, each as a percent-encoded ASCII string.",11,{"inputs":[{"name":"self"}],"output":{"generics":["split"],"name":"option"}}],[11,"query","","Return this URL’s query string, if any, as a percent-encoded ASCII string.",11,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"query_pairs","","Parse the URL’s query string, if any, as `application/x-www-form-urlencoded` and return an iterator of (key, value) pairs.",11,{"inputs":[{"name":"self"}],"output":{"name":"parse"}}],[11,"fragment","","Return this URL’s fragment identifier, if any.",11,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"set_fragment","","Change this URL’s fragment identifier.",11,null],[11,"set_query","","Change this URL’s query string.",11,null],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a sequence of name/value pairs in `application/x-www-form-urlencoded` syntax.",11,{"inputs":[{"name":"self"}],"output":{"generics":["urlquery"],"name":"serializer"}}],[11,"set_path","","Change this URL’s path.",11,null],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s path segments.",11,{"inputs":[{"name":"self"}],"output":{"generics":["pathsegmentsmut"],"name":"result"}}],[11,"set_port","","Change this URL’s port number.",11,{"inputs":[{"name":"self"},{"generics":["u16"],"name":"option"}],"output":{"name":"result"}}],[11,"set_host","","Change this URL’s host.",11,{"inputs":[{"name":"self"},{"generics":["str"],"name":"option"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"set_ip_host","","Change this URL’s host to the given IP address.",11,{"inputs":[{"name":"self"},{"name":"ipaddr"}],"output":{"name":"result"}}],[11,"set_password","","Change this URL’s password.",11,{"inputs":[{"name":"self"},{"generics":["str"],"name":"option"}],"output":{"name":"result"}}],[11,"set_username","","Change this URL’s username.",11,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"set_scheme","","Change this URL’s scheme.",11,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in the `file` scheme.",11,{"inputs":[{"name":"p"}],"output":{"generics":["url"],"name":"result"}}],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL in the `file` scheme.",11,{"inputs":[{"name":"p"}],"output":{"generics":["url"],"name":"result"}}],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar, convert its path to an absolute `std::path::Path`.",11,{"inputs":[{"name":"self"}],"output":{"generics":["pathbuf"],"name":"result"}}],[11,"partial_cmp","","",11,{"inputs":[{"name":"self"},{"name":"url"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"as_ref","","",11,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","hyper_sync::error","",13,{"inputs":[{"name":"self"}],"output":{"name":"parseerror"}}],[11,"clone","hyper_sync","",11,{"inputs":[{"name":"self"}],"output":{"name":"url"}}],[11,"from","hyper_sync::error","",13,{"inputs":[{"name":"errors"}],"output":{"name":"parseerror"}}],[11,"index","hyper_sync","",11,{"inputs":[{"name":"self"},{"generics":["position"],"name":"range"}],"output":{"name":"str"}}],[11,"index","","",11,{"inputs":[{"name":"self"},{"generics":["position"],"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index","","",11,{"inputs":[{"name":"self"},{"generics":["position"],"name":"rangeto"}],"output":{"name":"str"}}],[11,"index","","",11,{"inputs":[{"name":"self"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"from_str","","",11,{"inputs":[{"name":"str"}],"output":{"generics":["url","parseerror"],"name":"result"}}],[11,"cmp","","",11,{"inputs":[{"name":"self"},{"name":"url"}],"output":{"name":"ordering"}}],[11,"hash","","",11,null],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"url"}],"output":{"name":"bool"}}],[11,"eq","hyper_sync::error","",13,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","hyper_sync","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"to_socket_addrs","","",11,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","hyper_sync::error","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","hyper_sync","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"description","hyper_sync::error","",13,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","hyper_sync::header","",0,{"inputs":[{"name":"self"}],"output":{"name":"languagetag"}}],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"generics":["languagetag","error"],"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"languagetag"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"default","","",0,{"inputs":[],"output":{"name":"languagetag"}}],[11,"matches","","Matches language tags. The first language acts as a language range, the second one is used as a normal language tag. None fields in the language range are ignored. If the language tag has more extlangs than the range these extlangs are ignored. Matches are case-insensitive. `*` in language ranges are represented using `None` values. The language range `*` that matches language tags is created by the default language tag: `let wildcard: LanguageTag = Default::default();.`",0,{"inputs":[{"name":"self"},{"name":"languagetag"}],"output":{"name":"bool"}}],[11,"is_language_range","","Checks if it is a language range, meaning that there are no extension and privateuse tags.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"canonicalize","","Returns the canonical version of the language tag.",0,{"inputs":[{"name":"self"}],"output":{"name":"languagetag"}}]],"paths":[[3,"LanguageTag"],[4,"Body"],[4,"RedirectPolicy"],[3,"Config"],[3,"Pool"],[3,"PooledStream"],[3,"Request"],[3,"Response"],[8,"IntoUrl"],[3,"Client"],[3,"RequestBuilder"],[3,"Url"],[3,"ProxyConfig"],[4,"ParseError"],[4,"Error"],[4,"Method"],[3,"EntityTag"],[3,"QualityItem"],[3,"AcceptCharset"],[3,"AcceptEncoding"],[3,"AcceptLanguage"],[3,"AcceptRanges"],[3,"Accept"],[3,"AccessControlAllowHeaders"],[3,"AccessControlAllowMethods"],[3,"AccessControlExposeHeaders"],[3,"AccessControlMaxAge"],[3,"AccessControlRequestHeaders"],[3,"AccessControlRequestMethod"],[3,"Allow"],[3,"Authorization"],[3,"Basic"],[3,"Bearer"],[3,"CacheControl"],[3,"Connection"],[3,"ContentDisposition"],[3,"ContentEncoding"],[3,"ContentLanguage"],[3,"ContentLength"],[3,"ContentLocation"],[3,"ContentRange"],[3,"ContentType"],[3,"Date"],[3,"ETag"],[3,"Expires"],[3,"From"],[3,"IfModifiedSince"],[3,"IfUnmodifiedSince"],[3,"LastEventId"],[3,"LastModified"],[3,"Prefer"],[3,"PreferenceApplied"],[3,"ProxyAuthorization"],[3,"SetCookie"],[3,"StrictTransportSecurity"],[3,"Te"],[3,"TransferEncoding"],[3,"Upgrade"],[3,"Protocol"],[3,"Warning"],[4,"Charset"],[4,"Encoding"],[4,"RangeUnit"],[4,"AccessControlAllowOrigin"],[4,"CacheDirective"],[4,"ConnectionOption"],[4,"DispositionType"],[4,"DispositionParam"],[4,"ContentRangeSpec"],[4,"Expect"],[4,"IfMatch"],[4,"IfNoneMatch"],[4,"IfRange"],[4,"RelationType"],[4,"MediaDesc"],[4,"Pragma"],[4,"Preference"],[4,"Range"],[4,"ByteRangeSpec"],[4,"ReferrerPolicy"],[4,"RetryAfter"],[4,"ProtocolName"],[4,"Vary"],[3,"AccessControlAllowCredentials"],[3,"Cookie"],[3,"CookieIter"],[3,"Host"],[3,"Link"],[3,"LinkValue"],[3,"Location"],[3,"Origin"],[3,"Referer"],[3,"Server"],[3,"UserAgent"],[3,"Raw"],[3,"HttpDate"],[3,"Quality"],[3,"ExtendedValue"],[8,"Scheme"],[8,"Header"],[3,"Formatter"],[3,"Headers"],[3,"HeadersItems"],[3,"HeaderView"],[3,"RawStatus"],[3,"Incoming"],[4,"HttpReader"],[4,"HttpWriter"],[3,"Http11Message"],[3,"Http11Protocol"],[3,"EndError"],[3,"RequestHead"],[3,"ResponseHead"],[8,"Protocol"],[8,"HttpMessage"],[3,"HttpStream"],[4,"HttpsStream"],[8,"NetworkListener"],[8,"NetworkStream"],[8,"NetworkConnector"],[8,"SslClient"],[8,"SslServer"],[3,"NetworkConnections"],[3,"HttpListener"],[3,"HttpConnector"],[3,"HttpsListener"],[3,"HttpsConnector"],[3,"Listening"],[3,"Request"],[3,"Response"],[8,"Handler"],[3,"Server"],[4,"StatusCode"],[4,"StatusClass"],[4,"RequestUri"],[4,"HttpVersion"]]};
initSearch(searchIndex);
